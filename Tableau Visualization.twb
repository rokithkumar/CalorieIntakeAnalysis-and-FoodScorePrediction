<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='CalorieGoalMale Parameter' datatype='real' name='[CalorieGoalMale Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2873.4829999999997'>
        <calculation class='tableau' formula='2873.4829999999997' />
        <range max='2873.4829999999997' min='2873.4829999999997' />
      </column>
      <column caption='CalorieTakeLevel2 Parameter' datatype='real' name='[CalorieTakeLevel2 Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1873.4829999999997'>
        <calculation class='tableau' formula='1873.4829999999997' />
        <range max='1873.4829999999997' min='1873.4829999999997' />
      </column>
      <column caption='CaloriesCutLevel1 Parameter' datatype='real' name='[CaloriesCutLevel1 Parameter]' param-domain-type='range' role='measure' type='quantitative' value='3373.4829999999997'>
        <calculation class='tableau' formula='3373.4829999999997' />
        <range max='3373.4829999999997' min='3373.4829999999997' />
      </column>
      <column caption='CaloriesCutLevel2 Parameter' datatype='real' name='[CaloriesCutLevel2 Parameter]' param-domain-type='range' role='measure' type='quantitative' value='3873.4829999999997'>
        <calculation class='tableau' formula='3873.4829999999997' />
        <range max='3873.4829999999997' min='3873.4829999999997' />
      </column>
      <column caption='CaloriesTakeLevel1 Parameter' datatype='real' name='[CaloriesTakeLevel1 Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2373.4829999999997'>
        <calculation class='tableau' formula='2373.4829999999997' />
        <range max='2373.4829999999997' min='2373.4829999999997' />
      </column>
      <column caption='Age' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='40'>
        <calculation class='tableau' formula='40' />
      </column>
      <column caption='Weight' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='90.'>
        <calculation class='tableau' formula='90.' />
      </column>
      <column caption='Height' datatype='integer' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='170'>
        <calculation class='tableau' formula='170' />
      </column>
    </datasource>
    <datasource caption='project_dataset - food_log' inline='true' name='federated.07bt8lv1vv2ko911drmpt0l89lph' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='project_dataset - food_log' name='textscan.0o0o8y71xzl5h013ezcw20tx9b71'>
            <connection class='textscan' directory='F:/Rokith/VIT/SEM-6/D2-DV/Nutritional Value Analysis' filename='FoodLog_Dataset.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0o0o8y71xzl5h013ezcw20tx9b71' name='FoodLog_Dataset.csv' table='[FoodLog_Dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Meal' ordinal='1' />
            <column datatype='string' name='Entry' ordinal='2' />
            <column datatype='string' name='Food' ordinal='3' />
            <column datatype='string' name='Food Score' ordinal='4' />
            <column datatype='integer' name='calories (kcal)' ordinal='5' />
            <column datatype='integer' name='carbs (g)' ordinal='6' />
            <column datatype='integer' name='fat (g)' ordinal='7' />
            <column datatype='integer' name='protein (g)' ordinal='8' />
            <column datatype='integer' name='sodium (mg)' ordinal='9' />
            <column datatype='integer' name='sugar (g)' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0o0o8y71xzl5h013ezcw20tx9b71' name='FoodLog_Dataset.csv' table='[FoodLog_Dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Meal' ordinal='1' />
            <column datatype='string' name='Entry' ordinal='2' />
            <column datatype='string' name='Food' ordinal='3' />
            <column datatype='string' name='Food Score' ordinal='4' />
            <column datatype='integer' name='calories (kcal)' ordinal='5' />
            <column datatype='integer' name='carbs (g)' ordinal='6' />
            <column datatype='integer' name='fat (g)' ordinal='7' />
            <column datatype='integer' name='protein (g)' ordinal='8' />
            <column datatype='integer' name='sodium (mg)' ordinal='9' />
            <column datatype='integer' name='sugar (g)' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Meal]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Meal</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entry]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Entry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Food]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Food</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food Score</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Food Score]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Food Score</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calories (kcal)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calories (kcal)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>calories (kcal)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carbs (g)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carbs (g)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>carbs (g)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fat (g)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fat (g)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>fat (g)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>protein (g)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[protein (g)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>protein (g)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sodium (mg)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sodium (mg)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>sodium (mg)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sugar (g)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sugar (g)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>sugar (g)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[__tableau_internal_object_id__].[cnt:project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC:qk]&quot;' value='Occurances' />
        </aliases>
      </column>
      <column caption='Carbs + Fats' datatype='integer' name='[Calculation_153685401751662592]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[carbs (g)]+[fat (g)]' />
      </column>
      <column caption='Meal Type' datatype='string' name='[Calculation_153685401753006082]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Meal] = &apos;Breakfast&apos;&#13;&#10;    THEN &apos;Primary&apos;&#13;&#10;ELSEIF [Meal] = &apos;Lunch&apos;&#13;&#10;    THEN &apos;Primary&apos;&#13;&#10;ELSEIF [Meal] = &apos;Dinner&apos;&#13;&#10;    THEN &apos;Primary&apos;&#13;&#10;ELSE &apos;Secondary&apos;&#13;&#10;END' />
      </column>
      <column caption='Calories per gram of Carb' datatype='real' name='[Calculation_153685401753616387]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([calories (kcal)])/SUM([carbs (g)])' />
      </column>
      <column caption='Daily Calories' datatype='real' name='[Calculation_153685401757483014]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([calories (kcal)]) / COUNTD([Date])' />
      </column>
      <column caption='% of Cal Goal' datatype='real' default-format='p0.00%' name='[Calculation_153685401758531592]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_153685401757483014] / 2500' />
      </column>
      <column caption='Select a Sheet' datatype='string' name='[Calculation_780811597096173568]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Sodium(g)' datatype='real' name='[Calculation_805299920784834560]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[sodium (mg)]/1000' />
      </column>
      <column caption='Calories per gram of Carb - Primary Meal' datatype='real' name='[Calories per gram of Carb (copy)_153685401756667909]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(&#13;&#10;    IF [Calculation_153685401753006082] = &apos;Primary&apos; THEN [calories (kcal)] END)&#13;&#10;/&#13;&#10;SUM(IF [Calculation_153685401753006082] = &apos;Primary&apos; THEN [carbs (g)] END)' />
      </column>
      <column caption='Food Score1' datatype='string' name='[Food Score]' role='dimension' type='nominal' />
      <column caption='Food1' datatype='string' name='[Food]' role='dimension' type='nominal' />
      <column caption='Meal1' datatype='string' name='[Meal]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='FoodLog_Dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='project_dataset - food_log.csv' datatype='table' name='[__tableau_internal_object_id__].[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]' role='measure' type='quantitative' />
      <column caption='Calories (Kcal)' datatype='integer' name='[calories (kcal)]' role='measure' type='quantitative' />
      <column caption='Carbs (G)' datatype='integer' name='[carbs (g)]' role='measure' type='quantitative' />
      <column caption='Fat (G)' datatype='integer' name='[fat (g)]' role='measure' type='quantitative' />
      <column caption='Protein (G)' datatype='integer' name='[protein (g)]' role='measure' type='quantitative' />
      <column caption='Sodium (Mg)' datatype='integer' name='[sodium (mg)]' role='measure' type='quantitative' />
      <column caption='Sugar (G)' datatype='integer' name='[sugar (g)]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_153685401751662592]' derivation='Sum' name='[sum:Calculation_153685401751662592:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_805299920784834560]' derivation='Sum' name='[sum:Calculation_805299920784834560:qk]' pivot='key' type='quantitative' />
      <column-instance column='[calories (kcal)]' derivation='Sum' name='[sum:calories (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[carbs (g)]' derivation='Sum' name='[sum:carbs (g):qk]' pivot='key' type='quantitative' />
      <column-instance column='[protein (g)]' derivation='Sum' name='[sum:protein (g):qk]' pivot='key' type='quantitative' />
      <column-instance column='[sodium (mg)]' derivation='Sum' name='[sum:sodium (mg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[sugar (g)]' derivation='Sum' name='[sum:sugar (g):qk]' pivot='key' type='quantitative' />
      <group caption='Unhealthy Top 10 foods' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Food]' member='&quot;Cheddar Cheese&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;Cookies&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;French Fries&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;Gruyere Cheese&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;Ketchup&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;Mayo&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;Orange Chicken&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;Potato Chips&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;Red Wine&quot;' />
          <groupfilter function='member' level='[Food]' member='&quot;Swiss Cheese&quot;' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='F:/Rokith/VIT/SEM-6/D2-DV/J Component/J Component.twb Files/Data/Nutrition Consumption Analysis.twb Files/federated.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/21/2020 03:04:02 PM' username=''>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>89</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Meal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Meal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Meal</remote-alias>
              <ordinal>1</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entry</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entry</remote-alias>
              <ordinal>2</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>343</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Food</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Food]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Food</remote-alias>
              <ordinal>3</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>158</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Food Score</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Food Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Food Score</remote-alias>
              <ordinal>4</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>calories (kcal)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[calories (kcal)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>calories (kcal)</remote-alias>
              <ordinal>5</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>171</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carbs (g)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[carbs (g)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carbs (g)</remote-alias>
              <ordinal>6</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fat (g)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[fat (g)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fat (g)</remote-alias>
              <ordinal>7</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>protein (g)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[protein (g)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>protein (g)</remote-alias>
              <ordinal>8</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sodium (mg)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[sodium (mg)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sodium (mg)</remote-alias>
              <ordinal>9</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>180</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sugar (g)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[sugar (g)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sugar (g)</remote-alias>
              <ordinal>10</ordinal>
              <family>project_dataset - food_log.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:calories (kcal):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[cum:sum:sodium (mg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[diff:sum:sodium (mg):qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[diff:sum:sodium (mg):qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[diff:sum:sodium (mg):qk:5]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[diff:sum:sodium (mg):qk:6]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[diff:sum:sodium (mg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[pcdf:sum:sodium (mg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[pcrk:sum:sodium (mg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[pcto:sum:sodium (mg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[pcva:sum:sodium (mg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[rank:sum:sodium (mg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:Calculation_805299920784834560:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:sodium (mg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[win:sum:sodium (mg):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:protein (g):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:Calculation_153685401751662592:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:sugar (g):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:carbs (g):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FoodLog_Dataset.csv' id='FoodLog_Dataset.csv_9AB308794CA24DEC890823AFA5316A87'>
            <properties context=''>
              <relation connection='textscan.0o0o8y71xzl5h013ezcw20tx9b71' name='FoodLog_Dataset.csv' table='[FoodLog_Dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Meal' ordinal='1' />
                  <column datatype='string' name='Entry' ordinal='2' />
                  <column datatype='string' name='Food' ordinal='3' />
                  <column datatype='string' name='Food Score' ordinal='4' />
                  <column datatype='integer' name='calories (kcal)' ordinal='5' />
                  <column datatype='integer' name='carbs (g)' ordinal='6' />
                  <column datatype='integer' name='fat (g)' ordinal='7' />
                  <column datatype='integer' name='protein (g)' ordinal='8' />
                  <column datatype='integer' name='sodium (mg)' ordinal='9' />
                  <column datatype='integer' name='sugar (g)' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='project_dataset - food_log.csv' id='project_dataset - food_log.csv_C7C11AFDF05C44728B0B032880292ADC'>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='FoodLog_Dataset' inline='true' name='federated.1fl7hiq1d2zz9m10xoii91ovfzey' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FoodLog_Dataset' name='textscan.15cni9d1oxxuxg17v7ddv1ajdu4r'>
            <connection class='textscan' directory='F:/Rokith/VIT/SEM-6/D2-DV/Nutritional Value Analysis' filename='FoodLog_Dataset.csv' password='' server='' />
          </named-connection>
          <named-connection caption='FoodLog_Dataset (2)' name='textscan.0hjom0v1h5wiu71fi9yij11fbc7q'>
            <connection class='textscan' directory='F:/Rokith/VIT/SEM-6/D2-DV/Nutritional Value Analysis' filename='FoodLog_Dataset.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0hjom0v1h5wiu71fi9yij11fbc7q' name='FoodLog_Dataset.csv' table='[FoodLog_Dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Meal' ordinal='1' />
            <column datatype='string' name='Entry' ordinal='2' />
            <column datatype='string' name='Food' ordinal='3' />
            <column datatype='string' name='Food Score' ordinal='4' />
            <column datatype='integer' name='calories (kcal)' ordinal='5' />
            <column datatype='integer' name='carbs (g)' ordinal='6' />
            <column datatype='integer' name='fat (g)' ordinal='7' />
            <column datatype='integer' name='protein (g)' ordinal='8' />
            <column datatype='integer' name='sodium (mg)' ordinal='9' />
            <column datatype='integer' name='sugar (g)' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0hjom0v1h5wiu71fi9yij11fbc7q' name='FoodLog_Dataset.csv' table='[FoodLog_Dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Meal' ordinal='1' />
            <column datatype='string' name='Entry' ordinal='2' />
            <column datatype='string' name='Food' ordinal='3' />
            <column datatype='string' name='Food Score' ordinal='4' />
            <column datatype='integer' name='calories (kcal)' ordinal='5' />
            <column datatype='integer' name='carbs (g)' ordinal='6' />
            <column datatype='integer' name='fat (g)' ordinal='7' />
            <column datatype='integer' name='protein (g)' ordinal='8' />
            <column datatype='integer' name='sodium (mg)' ordinal='9' />
            <column datatype='integer' name='sugar (g)' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Meal]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Meal</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entry]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Entry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Food]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Food</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food Score</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Food Score]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>Food Score</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calories (kcal)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calories (kcal)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>calories (kcal)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carbs (g)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[carbs (g)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>carbs (g)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fat (g)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fat (g)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>fat (g)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>protein (g)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[protein (g)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>protein (g)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sodium (mg)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sodium (mg)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>sodium (mg)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sugar (g)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sugar (g)]</local-name>
            <parent-name>[FoodLog_Dataset.csv]</parent-name>
            <remote-alias>sugar (g)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CalorieGoalMale' datatype='real' datatype-customized='true' name='[Calculation_682295354701389829]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(88.36+(13.4*[Parameters].[Parameter 3])+(4.8*[Parameters].[Parameter 4])-(5.7*[Parameters].[Parameter 2]))*1.55' />
      </column>
      <column caption='CalorieGoalFemale' datatype='real' name='[Calculation_831195617581486080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(447.6+(9.2*[Parameters].[Parameter 3])+(3.1*[Parameters].[Parameter 4])-(4.3*[Parameters].[Parameter 2]))*1.55' />
      </column>
      <column caption='CaloriesCutLevel1' datatype='real' name='[Calculation_831195617587421188]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[CalorieGoalMale Parameter]+500' />
      </column>
      <column caption='CaloriesTakeLevel2' datatype='real' name='[Calculation_831195617588097031]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_682295354701389829]-1000' />
      </column>
      <column caption='CaloriesCutLevel2' datatype='real' name='[CaloriesCutLevel1 (copy)_831195617587933189]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[CalorieGoalMale Parameter]+1000' />
      </column>
      <column caption='CaloriesTakeLevel1' datatype='real' name='[CaloriesCutLevel2 (copy)_831195617588006918]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[CalorieGoalMale Parameter]-500' />
      </column>
      <column caption='Food Score1' datatype='string' name='[Food Score]' role='dimension' type='nominal' />
      <column caption='Meal1' datatype='string' name='[Meal]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='FoodLog_Dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6]' role='measure' type='quantitative' />
      <column caption='Calories (Kcal)' datatype='integer' name='[calories (kcal)]' role='measure' type='quantitative' />
      <column caption='Carbs (G)' datatype='integer' name='[carbs (g)]' role='measure' type='quantitative' />
      <column caption='Fat (G)' datatype='integer' name='[fat (g)]' role='measure' type='quantitative' />
      <column caption='Protein (G)' datatype='integer' name='[protein (g)]' role='measure' type='quantitative' />
      <column caption='Sodium (Mg)' datatype='integer' name='[sodium (mg)]' role='measure' type='quantitative' />
      <column caption='Sugar (G)' datatype='integer' name='[sugar (g)]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.606557' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.393443' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='CalorieGoalMale Parameter' datatype='real' name='[CalorieGoalMale Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2873.4829999999997'>
          <calculation class='tableau' formula='2873.4829999999997' />
          <range max='2873.4829999999997' min='2873.4829999999997' />
        </column>
        <column caption='Age' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='40'>
          <calculation class='tableau' formula='40' />
        </column>
        <column caption='Weight' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='90.'>
          <calculation class='tableau' formula='90.' />
        </column>
        <column caption='Height' datatype='integer' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='170'>
          <calculation class='tableau' formula='170' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FoodLog_Dataset.csv' id='FoodLog_Dataset.csv_016984718F1544A5A10BDA2503FA77F6'>
            <properties context=''>
              <relation connection='textscan.0hjom0v1h5wiu71fi9yij11fbc7q' name='FoodLog_Dataset.csv' table='[FoodLog_Dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Meal' ordinal='1' />
                  <column datatype='string' name='Entry' ordinal='2' />
                  <column datatype='string' name='Food' ordinal='3' />
                  <column datatype='string' name='Food Score' ordinal='4' />
                  <column datatype='integer' name='calories (kcal)' ordinal='5' />
                  <column datatype='integer' name='carbs (g)' ordinal='6' />
                  <column datatype='integer' name='fat (g)' ordinal='7' />
                  <column datatype='integer' name='protein (g)' ordinal='8' />
                  <column datatype='integer' name='sodium (mg)' ordinal='9' />
                  <column datatype='integer' name='sugar (g)' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Calorie &amp; Food Score'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodLog_Dataset' name='federated.1fl7hiq1d2zz9m10xoii91ovfzey' />
          </datasources>
          <datasource-dependencies datasource='federated.1fl7hiq1d2zz9m10xoii91ovfzey'>
            <column caption='Food Score1' datatype='string' name='[Food Score]' role='dimension' type='nominal' />
            <column caption='Meal1' datatype='string' name='[Meal]' role='dimension' type='nominal' />
            <column caption='Calories (Kcal)' datatype='integer' name='[calories (kcal)]' role='measure' type='quantitative' />
            <column-instance column='[Food Score]' derivation='None' name='[none:Food Score:nk]' pivot='key' type='nominal' />
            <column-instance column='[Meal]' derivation='None' name='[none:Meal:nk]' pivot='key' type='nominal' />
            <column-instance column='[calories (kcal)]' derivation='Sum' name='[sum:calories (kcal):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Meal:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f17b79' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[sum:calories (kcal):qk]</rows>
        <cols>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Food Score:nk]</cols>
      </table>
      <simple-id uuid='{16DF8CD1-E856-4528-A8F9-85325D7D3BF2}' />
    </worksheet>
    <worksheet name='Calories Consumed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/NutritionConsumptionAnalysis/Caloriesoverperiod?rev=' id='34560243' path='/workbooks/NutritionConsumptionAnalysis' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='project_dataset - food_log' name='federated.07bt8lv1vv2ko911drmpt0l89lph' />
          </datasources>
          <datasource-dependencies datasource='federated.07bt8lv1vv2ko911drmpt0l89lph'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Calories (Kcal)' datatype='integer' name='[calories (kcal)]' role='measure' type='quantitative' />
            <column-instance column='[calories (kcal)]' derivation='Sum' name='[sum:calories (kcal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:calories (kcal):qk]</rows>
        <cols>[federated.07bt8lv1vv2ko911drmpt0l89lph].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{B3F3EC77-B51F-4C4D-B337-5E54DB2987B5}' />
    </worksheet>
    <worksheet name='Calories Intake'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodLog_Dataset' name='federated.1fl7hiq1d2zz9m10xoii91ovfzey' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='CalorieGoalMale Parameter' datatype='real' name='[CalorieGoalMale Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2873.4829999999997'>
              <calculation class='tableau' formula='2873.4829999999997' />
              <range max='2873.4829999999997' min='2873.4829999999997' />
            </column>
            <column caption='CalorieTakeLevel2 Parameter' datatype='real' name='[CalorieTakeLevel2 Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1873.4829999999997'>
              <calculation class='tableau' formula='1873.4829999999997' />
              <range max='1873.4829999999997' min='1873.4829999999997' />
            </column>
            <column caption='CaloriesCutLevel1 Parameter' datatype='real' name='[CaloriesCutLevel1 Parameter]' param-domain-type='range' role='measure' type='quantitative' value='3373.4829999999997'>
              <calculation class='tableau' formula='3373.4829999999997' />
              <range max='3373.4829999999997' min='3373.4829999999997' />
            </column>
            <column caption='CaloriesCutLevel2 Parameter' datatype='real' name='[CaloriesCutLevel2 Parameter]' param-domain-type='range' role='measure' type='quantitative' value='3873.4829999999997'>
              <calculation class='tableau' formula='3873.4829999999997' />
              <range max='3873.4829999999997' min='3873.4829999999997' />
            </column>
            <column caption='CaloriesTakeLevel1 Parameter' datatype='real' name='[CaloriesTakeLevel1 Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2373.4829999999997'>
              <calculation class='tableau' formula='2373.4829999999997' />
              <range max='2373.4829999999997' min='2373.4829999999997' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fl7hiq1d2zz9m10xoii91ovfzey'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Calories (Kcal)' datatype='integer' name='[calories (kcal)]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[calories (kcal)]' derivation='Sum' name='[sum:calories (kcal):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[sum:calories (kcal):qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#faf5f0' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#f6eee3' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#f5ead7' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#f9eee8' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#dfedeb' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#e15759' />
            <format attr='stroke-color' id='refline0' value='#ff9da7' />
            <format attr='stroke-color' id='refline2' value='#72b966' />
            <format attr='stroke-color' id='refline3' value='#edc948' />
            <format attr='stroke-color' id='refline4' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[sum:calories (kcal):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='High Calorie - 1' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[CaloriesCutLevel1 Parameter]' z-order='1' />
            <reference-line axis-column='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[sum:calories (kcal):qk]' enable-instant-analytics='true' formula='average' id='refline1' label='High Calorie - 2' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[CaloriesCutLevel2 Parameter]' z-order='2' />
            <reference-line axis-column='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[sum:calories (kcal):qk]' enable-instant-analytics='true' formula='average' id='refline2' label='Calorie Goal' label-type='custom' probability='95' scope='per-pane' value-column='[Parameters].[CalorieGoalMale Parameter]' z-order='5' />
            <reference-line axis-column='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[sum:calories (kcal):qk]' enable-instant-analytics='true' formula='average' id='refline3' label='Low Calorie - 1' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[CaloriesTakeLevel1 Parameter]' z-order='3' />
            <reference-line axis-column='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[sum:calories (kcal):qk]' enable-instant-analytics='true' formula='average' id='refline4' label='Low Calorie - 2' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[CalorieTakeLevel2 Parameter]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[sum:calories (kcal):qk]</rows>
        <cols>([federated.1fl7hiq1d2zz9m10xoii91ovfzey].[mn:Date:ok] / [federated.1fl7hiq1d2zz9m10xoii91ovfzey].[dy:Date:ok])</cols>
      </table>
      <simple-id uuid='{F030C0D1-4703-467A-8A7F-51DF8332A8FC}' />
    </worksheet>
    <worksheet name='Calories Per Meal'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/NutritionConsumptionAnalysis/CaloriesperMealrelationship?rev=' id='34560244' path='/workbooks/NutritionConsumptionAnalysis' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='project_dataset - food_log' name='federated.07bt8lv1vv2ko911drmpt0l89lph' />
          </datasources>
          <datasource-dependencies datasource='federated.07bt8lv1vv2ko911drmpt0l89lph'>
            <column caption='Meal1' datatype='string' name='[Meal]' role='dimension' type='nominal' />
            <column caption='Calories (Kcal)' datatype='integer' name='[calories (kcal)]' role='measure' type='quantitative' />
            <column caption='Carbs (G)' datatype='integer' name='[carbs (g)]' role='measure' type='quantitative' />
            <column-instance column='[Meal]' derivation='None' name='[none:Meal:nk]' pivot='key' type='nominal' />
            <column-instance column='[calories (kcal)]' derivation='Sum' name='[sum:calories (kcal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[carbs (g)]' derivation='Sum' name='[sum:carbs (g):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <text column='[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]' />
              <lod column='[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value='times' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:carbs (g):qk]</rows>
        <cols>[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:calories (kcal):qk]</cols>
      </table>
      <simple-id uuid='{D6139B49-DAEF-4DB9-9FCE-7A2DFCA731A9}' />
    </worksheet>
    <worksheet name='Days on which he consumed high sugar'>
      <table>
        <view>
          <datasources>
            <datasource caption='project_dataset - food_log' name='federated.07bt8lv1vv2ko911drmpt0l89lph' />
          </datasources>
          <datasource-dependencies datasource='federated.07bt8lv1vv2ko911drmpt0l89lph'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column caption='Sugar (G)' datatype='integer' name='[sugar (g)]' role='measure' type='quantitative' />
            <column-instance column='[sugar (g)]' derivation='Sum' name='[sum:sugar (g):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:sugar (g):qk]' included-values='in-range'>
            <min>80</min>
            <max>139</max>
          </filter>
          <slices>
            <column>[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:sugar (g):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:sugar (g):qk]</rows>
        <cols>([federated.07bt8lv1vv2ko911drmpt0l89lph].[mn:Date:ok] / [federated.07bt8lv1vv2ko911drmpt0l89lph].[dy:Date:ok])</cols>
      </table>
      <simple-id uuid='{7868C44A-2016-492A-9D7C-2147C5919415}' />
    </worksheet>
    <worksheet name='Meal &amp; Carbs'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodLog_Dataset' name='federated.1fl7hiq1d2zz9m10xoii91ovfzey' />
          </datasources>
          <datasource-dependencies datasource='federated.1fl7hiq1d2zz9m10xoii91ovfzey'>
            <column caption='Food Score1' datatype='string' name='[Food Score]' role='dimension' type='nominal' />
            <column caption='Meal1' datatype='string' name='[Meal]' role='dimension' type='nominal' />
            <column caption='Carbs (G)' datatype='integer' name='[carbs (g)]' role='measure' type='quantitative' />
            <column-instance column='[Food Score]' derivation='None' name='[none:Food Score:nk]' pivot='key' type='nominal' />
            <column-instance column='[Meal]' derivation='None' name='[none:Meal:nk]' pivot='key' type='nominal' />
            <column-instance column='[carbs (g)]' derivation='Sum' name='[sum:carbs (g):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Food Score:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[sum:carbs (g):qk]</rows>
        <cols>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Meal:nk]</cols>
      </table>
      <simple-id uuid='{A1673D22-4B13-4333-8EA3-DC77E419AC62}' />
    </worksheet>
    <worksheet name='Meal Type with Good Protein'>
      <table>
        <view>
          <datasources>
            <datasource caption='project_dataset - food_log' name='federated.07bt8lv1vv2ko911drmpt0l89lph' />
          </datasources>
          <datasource-dependencies datasource='federated.07bt8lv1vv2ko911drmpt0l89lph'>
            <column caption='Meal1' datatype='string' name='[Meal]' role='dimension' type='nominal' />
            <column caption='Calories (Kcal)' datatype='integer' name='[calories (kcal)]' role='measure' type='quantitative' />
            <column-instance column='[Meal]' derivation='None' name='[none:Meal:nk]' pivot='key' type='nominal' />
            <column caption='Protein (G)' datatype='integer' name='[protein (g)]' role='measure' type='quantitative' />
            <column-instance column='[calories (kcal)]' derivation='Sum' name='[sum:calories (kcal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[protein (g)]' derivation='Sum' name='[sum:protein (g):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]' />
              <lod column='[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:protein (g):qk]</rows>
        <cols>[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:calories (kcal):qk]</cols>
      </table>
      <simple-id uuid='{E922F108-FED6-4D92-9C7C-E565ECE9EF36}' />
    </worksheet>
    <worksheet name='Nutrients Consumed'>
      <table>
        <view>
          <datasources>
            <datasource caption='project_dataset - food_log' name='federated.07bt8lv1vv2ko911drmpt0l89lph' />
          </datasources>
          <datasource-dependencies datasource='federated.07bt8lv1vv2ko911drmpt0l89lph'>
            <column caption='Carbs + Fats' datatype='integer' name='[Calculation_153685401751662592]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[carbs (g)]+[fat (g)]' />
            </column>
            <column caption='Sodium(g)' datatype='real' name='[Calculation_805299920784834560]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[sodium (mg)]/1000' />
            </column>
            <column caption='Meal1' datatype='string' name='[Meal]' role='dimension' type='nominal' />
            <column caption='Calories (Kcal)' datatype='integer' name='[calories (kcal)]' role='measure' type='quantitative' />
            <column caption='Carbs (G)' datatype='integer' name='[carbs (g)]' role='measure' type='quantitative' />
            <column caption='Fat (G)' datatype='integer' name='[fat (g)]' role='measure' type='quantitative' />
            <column-instance column='[Meal]' derivation='None' name='[none:Meal:nk]' pivot='key' type='nominal' />
            <column caption='Protein (G)' datatype='integer' name='[protein (g)]' role='measure' type='quantitative' />
            <column caption='Sodium (Mg)' datatype='integer' name='[sodium (mg)]' role='measure' type='quantitative' />
            <column caption='Sugar (G)' datatype='integer' name='[sugar (g)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_153685401751662592]' derivation='Sum' name='[sum:Calculation_153685401751662592:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_805299920784834560]' derivation='Sum' name='[sum:Calculation_805299920784834560:qk]' pivot='key' type='quantitative' />
            <column-instance column='[calories (kcal)]' derivation='Sum' name='[sum:calories (kcal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[protein (g)]' derivation='Sum' name='[sum:protein (g):qk]' pivot='key' type='quantitative' />
            <column-instance column='[sugar (g)]' derivation='Sum' name='[sum:sugar (g):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07bt8lv1vv2ko911drmpt0l89lph].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:Calculation_153685401751662592:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:protein (g):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:Calculation_805299920784834560:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:sugar (g):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07bt8lv1vv2ko911drmpt0l89lph].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:calories (kcal):qk]&quot;</bucket>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:Calculation_153685401751662592:qk]&quot;</bucket>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:protein (g):qk]&quot;</bucket>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:Calculation_805299920784834560:qk]&quot;</bucket>
              <bucket>&quot;[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:sugar (g):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.07bt8lv1vv2ko911drmpt0l89lph].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07bt8lv1vv2ko911drmpt0l89lph].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07bt8lv1vv2ko911drmpt0l89lph].[Multiple Values]</rows>
        <cols>([federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk] / [federated.07bt8lv1vv2ko911drmpt0l89lph].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{2FCCEA4F-5656-486D-B9FD-7DAC39F53045}' />
    </worksheet>
    <worksheet name='Sugar v/s Carbohydrates'>
      <table>
        <view>
          <datasources>
            <datasource caption='project_dataset - food_log' name='federated.07bt8lv1vv2ko911drmpt0l89lph' />
          </datasources>
          <datasource-dependencies datasource='federated.07bt8lv1vv2ko911drmpt0l89lph'>
            <column caption='Meal1' datatype='string' name='[Meal]' role='dimension' type='nominal' />
            <column caption='Carbs (G)' datatype='integer' name='[carbs (g)]' role='measure' type='quantitative' />
            <column-instance column='[Meal]' derivation='None' name='[none:Meal:nk]' pivot='key' type='nominal' />
            <column caption='Sugar (G)' datatype='integer' name='[sugar (g)]' role='measure' type='quantitative' />
            <column-instance column='[carbs (g)]' derivation='Sum' name='[sum:carbs (g):qk]' pivot='key' type='quantitative' />
            <column-instance column='[sugar (g)]' derivation='Sum' name='[sum:sugar (g):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:sugar (g):qk]</rows>
        <cols>[federated.07bt8lv1vv2ko911drmpt0l89lph].[sum:carbs (g):qk]</cols>
      </table>
      <simple-id uuid='{EA41B94C-D9E3-49F8-93F2-46C9E19AB3EC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Calorie Requirements'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='Calories Intake' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Calories Consumed' w='98400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='47' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Calories Intake' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Calories Consumed' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F53CCFAA-67AE-4C18-A28E-E0FCB02ADE89}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Meal Statistics'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Calorie &amp; Food Score' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='11' name='Calories Per Meal' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='18250' id='8' name='Calorie &amp; Food Score' pane-specification-id='0' param='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Meal:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='48' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='11' is-fixed='true' name='Calories Per Meal' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Calorie &amp; Food Score' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18250' id='8' name='Calorie &amp; Food Score' pane-specification-id='0' param='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Meal:nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{12FDBA67-94D3-45D7-B2DC-7A426257E8BF}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Calories Consumed' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{592A1392-347D-40B0-9098-47CBA28D2B83}' />
    </window>
    <window class='worksheet' name='Calories Intake' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Calculation_831195617584254978:nk]</field>
            <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[usr:Calculation_682295354701389829:nk]</field>
            <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CBFE6A34-DCB0-488E-A8E8-20D83B2F966C}' />
    </window>
    <window class='dashboard' name='Calorie Requirements' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='Calories Consumed'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Calories Intake'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{780BBF2A-EEA4-4B88-8D7D-244192A0700F}' />
    </window>
    <window class='worksheet' name='Calories Per Meal' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Calculation_780811597096173568:nk]</field>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4CAC45B1-8317-4323-8F70-E3B9F88ACBC9}' />
    </window>
    <window class='worksheet' name='Calorie &amp; Food Score' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Meal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Food Score:nk]</field>
            <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Meal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{828924FA-B0C5-4572-96AB-46369E3E8A5E}' />
    </window>
    <window class='worksheet' name='Meal &amp; Carbs' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Food Score:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Food Score:nk]</field>
            <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Meal:nk]</field>
            <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[tdy:Date:qk]</field>
            <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7187B6D-C9A3-4F15-9536-793C1A7AB4A8}' />
    </window>
    <window class='dashboard' name='Meal Statistics' tab-color='#6e597f'>
      <viewpoints>
        <viewpoint name='Calorie &amp; Food Score'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1fl7hiq1d2zz9m10xoii91ovfzey].[none:Meal:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Calories Per Meal'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{47C2EBDD-9DB9-4344-8273-AF440E3B7B82}' />
    </window>
    <window class='worksheet' name='Meal Type with Good Protein' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[attr:Meal:nk]</field>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[io:Set 1:nk]</field>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Calculation_153685401753006082:nk]</field>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Food Score:nk]</field>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED2848DE-FED1-409E-8156-446655E0D1DF}' />
    </window>
    <window class='worksheet' name='Sugar v/s Carbohydrates' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Calculation_153685401753006082:nk]</field>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BDBF3BAD-DE7D-4178-9502-9552BBD079A4}' />
    </window>
    <window class='worksheet' name='Days on which he consumed high sugar' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA68AAB2-D3CB-47BD-8D97-3476A5E2B0DD}' />
    </window>
    <window class='worksheet' maximized='true' name='Nutrients Consumed' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07bt8lv1vv2ko911drmpt0l89lph].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[:Measure Names]</field>
            <field>[federated.07bt8lv1vv2ko911drmpt0l89lph].[none:Meal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B5699D1-0073-46E0-B696-9FD8F412472E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Calorie &amp; Food Score' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAX0klEQVR4nO3dZ3AcZ57f8W/35AwMBoNEIjNDEDOYRUnUUtJScRVOPtee9+p8tkt35Re+
      utqyy64Le1Vn19VtsE7e9e7e7VklK6y0VPKKK0pUorikCCaQBAMAIucZYAaDGUzs9gvmpV0k
      mGbI/n+qWEU0Zp75z6B/3U/3dD+Pouu6jhAGpCiKoua7CCHySQIgDE0CIAxNAiAMTQIgDE0C
      IAxNAiAMTQIgDE0CIAxNAiAMzZzvAkSCQ2+9xI/eaiVntQPlbPnD7/Ds5kU4rqO10Jcv8922
      RfzsxfvPLcnQ+eUb/OMbn5F0N/Lod/6YLQv8N7H+LNHBLvbt3sGOzzp55M//Ow/V3cTmbzEJ
      QAHQMmnmP/nn/NmzK7GYbqwtPZchmc5dXJDr5r1/2s3KP/sBG63tnMreWPtXitN3uptceRNz
      bUfIaTe7/VtLAlCgtEyYL958kwPDcdzVq3hy2zrKHBpDx/by0eethHUfKzZvY11TOeZclH3v
      vcmeM1G0UDuJ4kWXtKSClmR8ZAT7hpVssKqgpRg6uY+dn7YylnWyYuvvsbEszKc7PuHIYJyK
      xet56L7llNoH2fnKYfz3lnLiWJT7n9iI2vtbfv3JYSKaj3Xf+hesr/Fxz/0PsyQ3QN+7efu4
      rpscAxSIY2/9LX/4nW/z7Rf/gndbezj565d5b7CEjd/YiLfnA37y4Sli/cd4+9dfYJ2/jg1N
      XnZvf4XW7hiDu37Kq20W1nxjK2sWVWExKRcbNtXw5B8/wvB7/42XX/2AUDxDZOAIb/7yNyi1
      LWy9fw1l5jF2v/M+B2KlPLB5FZmjH/Hu5+1M58b4/NU3eO+r01Q2LcKR6mLneyeo3vAwW1fY
      2fE/3qYznbeP7KaQPUCBaHrmu5d0gYZ4/dURNv77/8zqWlht7uZf/vNBjlfaUd0L2bR+LXOo
      Z6TjFY73HGPwiwMsf/Y11jfD+MQuLBOXBAAL9eue5y/WPM1rP/o+//VXZfy7hi4UZwsPbV1P
      hRmyo8fYOW1h/daNLJ/vxRfv4J3200zFa7AUB9nwzRfYUmdjsvWnbN+1E9fpA1gAb3A58QRg
      zccndnNIAAqSk+IAnOweIjXXz1jfMLaieRTbIZkYYCI2Q8A0wXhkBo+zmCKvla6REdJLSkgk
      kmiX3uKRGOBIt059YyX1gRwfhyawNjlJxgcZCycIlpiZ0RS8uSRDYxEytVZCo1F0WwUWC9is
      xRT5bACYvAEWLL6f5/7Tv2FZ0MZMNALOPH1EN4kEoCD5WPn0o3z9Tz/krz8zk8m4eOL5ldTV
      pllUepK3XvoemqLgq13DloV1uJ3f5Df/82/566/nEMieIeVedrGpbJxDv3mb7a/PkFKLefrp
      pQRq0jTVnOatH/4Nv3J6Wbr1OTavrOGNnf/MX+3QUO2VbHryXny2gcuqclStYk3d17z2d9/j
      XZedstpVPP7IEj7d+Q5fn+6n42Q/7pf+C+3rHuaPHmvBa7/BI/rbQJE7wvJNIzk1SRwXfo8d
      5VzvRdcyRMZGmUrlMNu9lAZ8WFVIxaNMTMbIYMZTXILPZUPRkoRGxkjkTNitClmrjyq/61zz
      WaYmQ0TjKUx2L4GSc+0kzraT1lQ8JWUUWTNMhieZTuWwunyUFHuxqCkmRqZxBgM4TKDrGqnp
      ScKRabKags1VRInPytREmNhM5sI7Mrv8lJd4MKvK/+P9Fg5FURQJgDAsuSVSGJ4EQBjaXReA
      bDZLJpO5+gOF4C4MgBCzIQEQhiYBEIYmARCGJgEQhiYBEIYmARCGdlsuhtNyaWKTE8xgo7io
      GJsZQCeTiDIWipBRbPgDpXgcZtA14pOjhKJJVEcxFUEfFjVHLJbCZrNjtapkZqaZzih43K6C
      v95EFLbbEIAUg+0H6ewfYUIpZtW6zVT7QEtGOHlwL8f6I2i6QkltM+tWLcY508funV8xoSlk
      s2aaHtjG8qoU7e291NY2EvSr9La3MqDMpaW5AbPsw8QNuA0BULC5gyxqLmNofPLcMp3psSFG
      0y42bdtCSXqQvYdOMRiux9//Nan6B3l6WQnJni94/3A/zVXBC63FQj30hG0sXluN3Sxbf3Fj
      bkMArATrGmBqgOHQ+WUa8aSGr6gMv9uCTQ9QUjqGPhVnYkSn/sEy7GYFe30TFYdPESMIWpZk
      MkrP4aOUrHqccrcVBfj/XcwqF7mKa5GnG2J0NAVMJgsmBRRUTNkcqVQCJWPFZT+3ZVctmONT
      xAFCp3jvy0+x1q/juRI757v+uq6TTl+8MVXXdXRdl+uBxDXJUwAUzLpOKp0grYEllyGla1ic
      HmyOOJMRDfwqpKJEnSUUAYPBJTy3+puE2z/m0LF+1i6rxqGCqqrY7fYLLWezWXRdx2Kx5Oet
      iTtKng4hVXw+O5HxIYbDCWKjfYwMT+HwuwnW++nce4Kp1Ax9B/czHZxzyW2nZhpWrMEa7eTM
      QJQ7bAgaUYBuwx5gmJ0/eYvWUJRMTkM1fUTJiqf4t9+oY1nNMP/n9ZeJmspYv3UbNT4zqmsj
      C7ve5qc/+ABnbQtPbStHJYHVakFVVayeSpobw+zp6aQicC9+p9zWXMjiyTSJZGF0R02qit97
      +Xh7d90tkdIFKiyv7mzjzU/b810GABUlbn78H7Zd+FluiRSGJwEQhiYBEIYmARCGJgEQhiYB
      EIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCG
      JgEQhiYBEIYmARCGJgEQhpa/UaVyCXqO7mffkS5ynmpWbdpAY8AOuTQ9Bz9m97FRrHOW8ejm
      e/BYknR2jlNaWo7PZyU21EVn1MyCxlqcFhkhWly/PO0BcoR6T9MxqrH8wUdYu9BD94GvGYrr
      pEZb2XPGydotD9CQOsInxyLopAmHIySTWbKJCdo7zqBZvOcm2hDi+uVpFcoRy6TxFNdQXVGO
      NWgnkjhOZHSKZMdpau77No3lKpSs4cwHXSSXzTv3PI2h023ErQ2sbSjBJBt/cYPyFAATfpeL
      jhMH2THajsWiE5nSqLdPk0t4KS09t2NylhLM9BABiPaz57PTpE3FbHy0Ace5lV/TNHK53IWW
      NU278E/kX/aSv02+6bpOKpW6bFneAuCtaGTFaiejE9NoZFAGx7GYLaiKhq4BpvMVms7+1+qi
      rKKY8cEBYikdnGcToCgKqnqxJ6frOqqqYjKZfvdFRR6oSiHtppUr1ov89aIVC0XlNfgrFFIT
      fYRHRnAW+XAVJzjVk2Beg53cxBkGLAHWATj8NNQ2Mq/SROve/fg3ryTgMKEol7+p8xNkmM1y
      gFAInnDt5f6Sf8x3GQCYi+ZiNm+7fFmeaiETn6S7u4uptMLUSA9p373MDdqwWpaz/6Od7AmV
      khg8Q2Xz41i5uBsN1DZTP9XK8eM9tCytwyGz5BU0m5LBpybyXQYAijpzxbK8BcBkNqHqWaKT
      cRyV97B8yTzcKujFC1m/MsmJ3gie+RtYVu8G0lRXV+J2W1HMFuobF0Aoe7arJMQNyF8AHEXM
      u3cd835nuaKaKZ+3kvLLfmGnouLiNEgWbzkLvLejSnG3k/6DMDQJgDA0CYAwNAmAMDQJgDA0
      CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmAMDQJgDA0CYAwNAmA
      MDQJgDA0CYAwNAmAMDQJgDC0/I0fqOeIT4wxNDZBGisl5XMoLXKgkmNqtI/BUByTJ0jdnABW
      U45IZAaHw4nNZiI9HSGSUiku9mJRC2nsSXGnyVsAUpEhjhw8wHjChKJn6BgIsXLVCsqUPnZ/
      1krKYSM9fYzIhsdoqUlz6lQvtbWNlPoVuk8cYtRSx2qfF4vsw8QNyFMANKJjYdKOOWzavByv
      NsmBw+1MhROYxvejLXiIbc1FpAa+4p22XlbUVFx4Zmz8DH2TTu5ZPwebWbb+4sbkKQAKPr8H
      bbCXof5RZvQQybRCWYmLyDET9Q+XYDUpWKsXU/X1caJUQDZJZGKY0RMnKN/4JGVOCwoXR4M+
      7/zPMj9AYZgZLCV2YHG+ywDAXFaO83fWi/yNDeoOUFPcy/7dO0joDqqbV+Cz6UzlLBe37IoJ
      dSZBEiDSyxcHW1HLm3jcbeH8sPO6rpPJZC60e37lzxXQxAxGls1o6NnCGKpey6iFMkFGjvDQ
      GQbjAbY+dx8ePczB1mP09vtxOKeZmNQgoEJqkkmHnyJgILCAx1c+TOT0Ltraulm7sh6nCVRV
      xWazXWg5m82i6zoWiyU/b01cJlVA8zQoqoLD4bhsWd4OIbVMiul4jExOh5xGfDpGMpujrDFI
      51dHiSYTdH+9j5nyai6WbKJu2RrsiR66+ieRTo64UXkKgInyxiU0+iK8/eO/5+9/9g4z/iUs
      mVeKp/Y+lrmP8vMfvcTOUB2PrC5DxYTTacdsNmFxlbNsQTmjgz1EE9n8lC/uGop+6RHkXUC6
      QIUl8sabTG1/J99lAGAuL6PyB9+/8LOiKIqcRReGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCG
      JgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYBEIYmARCGJgEQhiYB
      EIYmARCGJgEQhpancesyDJ/ay84dB5k8v8hZwYYtD3JvtYfuvR+w6/AQtuoWnt66HK91hpMn
      Rykrq6K42MpU/0lORiwsWdiIyyIjRIvrl6cAmAk2tPDsHy1HA3LxEEdPdOB2ukgN7GHfcCWP
      vbCJyQMf8ptDNTzTYiEajVFcnCUTi3CscwB33WochTPspLhD5akLpGAyW3G4XLhcLjIzE+TM
      VcwJ2hk52UvdptVU+gMs2bAGpa+bmQvPyzFw6ihp93zm1RShKrL1FzemALahGUZO9+JpfhiX
      kmMm7qG05FwuHSUEUp1EACa7+aT9CLq3mi2P1uA4t+5rmkY2e3GMUE3T0HVdhkcvEIX0d9B1
      nWQyedmy/Adg4ijH0408VmoHdBRVI6cBpnO/t1qxADhLWNhUw3DHccIJnbJzCVAUBZPJdKE5
      RVHQNA1zAQ3LbWSqWkjnWZQrxozN71qixWnb08+iTY9hVwEUigJJ2k5PMW+Ri8zoSfqtQdYD
      2LxUVTdSVwZ79+6h+L4Wyt2WKwKg6zqqql62TOSPUkDdVEXhivUij/HUSQyfpNuzgMUehfMf
      U3DJClJtO9n16ad8/GUvtc21XJrZosqFzKvSONHezUxGZggQNya/ewBbOSuai1C5uJUw++ax
      YW2OruEY1jmLWFTjAjLU1c3F47GhmM3UNC7GFMlSONsWcafKYwAUnIEqnL+7VDUTqG0iUHvp
      UhvB4MVpkCzuAHXu21CiuOsV0hGKELedBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRA
      GJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgydcIf4h+37iSVS+S6Dxjl+nrlv
      cb7LuGkkAHeIA6eGCE/NXP2Bt1g2d3cNRCBdIGFos9gDaEyP99PZ1UckmQNFxVfWQGNdOW6b
      SUZoEHekawiARnK8k52/ep2PT8YonVNPTVUQ28wIn3/0AZNaEWsffZYn1jVgN8kORdxZrhKA
      HKGOPbz21l6Ca57iL3+/HpvZjNmkgq7xWDZDfKKX3dtf44d9W3nx91uQ0UrEneQqAdBQi+t4
      9l8tp6zCdUU3x2K14XAu4ck/XcjIsQ6SMKsA5JJRBrq7GZnK4A5UUVtdidOUY2LgFN0j05h9
      VSxqrMBmyhIKTeNyeXE4TKSiIUJJldKAH6tJOl/i+l0lABb8gTKio6N0nRrgynF+TXhKyggG
      PJQ3LZzdK2djdBzcz6lwGpfLTs46RTpbiXW6k9172rH6PSS7OolbHmd9fYaurj5qaxuxmaDr
      5BHCjnkEAv7ZvaYQv+MajgGmOfHpdt78pI3YFb8rYtVjL/B7jy/HO8sXngkP0jut0LTmAeoD
      VjRNQ1Fg5NB+zEseY8tiN5mRvby1v4fV9VUXnjc11sVg1MPS5irZ+osbdg0BKKLl+T9h9XM6
      aFliE2OEogly+tmne0pKrxje8OpyTE2msFtt6Mkx+voUHN5i/D4nkTE79au8WEwKlsqFVKeP
      EKEKUtOMDHYx1nWauQ99i4D97Iiiuq6jaRfPTeu6LvMD3Eqz/Gx1Xb+FxcyOrl85X8E1BEBB
      Uc4Ocx0Pd/Hh//4Fn+6L4F1UjS0SoXHbv+bZBzyz/EZNJ6ekiA33cjg0SDqdQ3VXsLJlBVlN
      xa6e27IrCqRTZADioxztOE3OM5d7rGdrOvumLv+DnJ8g49JQ3A10CmNF0nSdTCZzzY8vrA3R
      lbXPar2NhroJx0torKxiyXOPEez7kgGzDeusC1GxWVwU1y1i8fKl+NQZTvx2P2OjYYqd04TC
      GvODKiTDhG1+ioB+fwMPLa8j1v0FRw914F4zH7fp7AQMVuvFCrLZLLquXzERwp1OKZBvWlRV
      xW63X/PjkwU0UYmiKFfUPqsT94pixu7wUxpMMhnNYVEUxjv6iM+6FBVfiZdMNEzPUJiZRIxo
      JoPd5mTOwjmc2d3KaHSSk1/tIzu3FseF55mobW7Bmxug40yIXAHtXsWdaVbx9JUuZN49KXzO
      AL9880d8hZ/7v7UR1/W8sG8OLcvi7PpoO59PKsxfdR+bGspwKcWs7n+Xt3/xW1yNG3hqYwCF
      BF6vG6vVhNlZyr0L5rCvZ4hYsogig0wVOd8yQNRy5WmI2626gLboN4Oiz+IoRdc0stkMqtnM
      THiEUMZGeakfu6VwvgG+W7tA0z99EH16NN9lYKrfjPOJl6758ZE33mRq+zu3rqBZMJeXUfmD
      71/4WVEUZVZrbnS4jY/f/4LRlIqrJIg+epjPv+ok/9coCnF9ZhWARHSI/q5pdAugQCoWZrBz
      mORVnylEYZpVh87lDULu13z+SRWLi5McOtCJeemq6/geQIjCMKsAeIILuW/zELsOtPLbXBpX
      /UYeXFVzHadBhSgM1xCASQ58dBCttpmV8wLMb3mUuU1xkqk0A217Obj3GJ4t9876UgghCsE1
      BMBFZTDJz3/8N+xZ9xyPb5iPOzfOV796hR09Pr71nZZLztOLW0VLWdFmbFd/4C2mpu+us2vX
      EAArFUu/yX9csJwPX/1f/OIfPiSVSlOyeAt/+b0HKXMUzinQu1msvYHcRHG+y8Bhqbqu730K
      1TWsvRmiowN09UapX3Mf9Q4NU6CJzSurmOw9w2AoRvbW1ynELXHNl0O/8Ukb02gkp+NklX5+
      0vEFCkWs2vYCzz+xHN+tr1WIm+4qAdDRNB+rn/sTWp6/yiNzOXSTSYaZEHeUq6yvOSYGT3Dg
      YAextAaKgnLFP53keAdffXaUydtTsxA3zVX2AAoWVWe4bQe7vnSwcuP9LFtUTZHLiqJlmBjo
      4ODePRzpT1B77xaW3p6ahbhprhIAE77KRTz0TJCmM+18+O7LvPrSOFnt7LXpVm85KzZu5eGn
      76FhbkBOh4o7ztUPghUTDm+Q+qVBXly6GbQsMzMpFKujoK4CFeJ6zP7ibtWMw3V3XRMujEs2
      4cLQZhWAbDpBeGyMmVSKwaNf8NHnBxmKZQvkdm0hZm9WfZmJ3n28/0Ef6x+t5Ocvf4Znrpnu
      CTN/8FQz136btBCFY1Z7gEw6TjblIXzqAOkV3+D5TfdgHQ+TuFXVCXGLzSoAbk8FM6PbeemV
      MzQ3zSEWCZMqKZbTn+KONbs7wsrm88yffpct0w4qGsqZOtPEBnet3BAj7liz2gNM9LXy/i9/
      ybs/+4CDoSnS0SH272pj6lZVJ8QtNqs9gJbLYrX48bgsoGWJhkIkbXOvc6KxBN0HWzl0apAU
      YC2poWX1Sqq8Cv1tX7L/1DiWiiYeWLsQtyVFT88Efn8pXq+V+Gg33VNmGurm4jAXxohp4s40
      q3W3ONiAx/QhOw8P0/Z3raCX8dSLL1zfDRLpGD0TGWoWLKPEb0e1ufA7zWRCh9h9PE3Tymai
      x/fy+akqHm3SGR0N4XAU4bbOcLKjg2xgKfJFtLhRswqAzV/PMy/+Fese6WF0SqdywSIqPNe3
      /dcTCRSnj4r6BiqLLt5md+ZwG3Pu/wOaK1WYC69/cJpU07zzz2Ko8zARvZa1C8qQjb+4Uf8X
      OKJrWvjHROUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Calorie Requirements' width='192'>
      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
      SLa3tVFXU8upZ3yF+tr99HR3J1SI2+Xm+X//m6uuv44Os5nXXniJiy67lMyszFicPTt3sWfX
      rmhl6ezkyuuvG/ax8v5QCm5HC6YMUyxMFEXefOVVzr3gq3GVouaA372/8vT29LKzuprTzzqT
      N195leUrV8bl08+ObdUEg0EWLV2C3WbnhbVr+c4118R0dzh9Dgf/+fAjvnrh12moq6fTbOak
      Az75xx54kDNXrYqNQw7lzVde5Stnn41Wp6V661Y+X7+RCy6+kLxDnCYNdfXYrFYWLV0SJ59C
      oRgwn/L6Sy9z9urVg8rpD6WgVhwcnG/bvAWvx0Nufv6AMt57820Ki4tiZTz+0MN866orE34A
      ErYA2QXFNNfVsKs1yLwRTPxEFFm0BU+m0RMgf24BCysqmDl7NqNZOqU2wTd+9k3Q6WL5ZJrg
      HN15lFdWEIEj5i+PWHjsrls48ZILeeS133Demm/iNy0dEE9hgo5IO9f/4m06zR38+o6/Ypi5
      OC7/1FkraNv2DDm5uSxZUYWqZOGw3y/o9XHTzddy7Q9/yLKTlgNw79338NknHjY1bOf2//5T
      LO6bX9zDnLlLmWmK9pXDMhtPvLmRGV9ZyWNvPM2Z11ybsNy8xWdw9Tcv44Yfr+Sff/s3P7/t
      N5B/+qAyqk3wr+ee5exrL+SVDfdQUXUGftP5AKz5yaroGCpBug+2f0L5KSdSml/GbXc9xINP
      P48pIyMurs+4n6eevpe5qy6MhT32xnquuv46/Kb43sXmlu3kdM5k/sKFg+qOA/MAPV3d/PZv
      D/Hw2qdxu93c8/dbeWhVdBm92+XmX88/zr9f+T/8B8Y7fpOVfz3Xw/U/+uGAfAcZBMvwBaF+
      x3ZCwsjO46yYUcU137uBVeefP6rJp0PRJrgZpHwEs8SmjAxsVguiKLJ7xw4WLR1Y+fu56Ze/
      4Lw1X+Opl16I66f2k5WTw/dvupELL/0mJwzyxxqK//nn/+OuP/6JpoYGNn7yKTu3VfPEi88D
      8PhDD8XitTY1UVxycKY13WjEbrfx8L/u5+obbhg0/9S0NNZccjHrPviAp156MaFj4HCqZs6g
      pamJLzZ+xkkrD87IJtJ7P7n5+XSazbz31lusOPWUhG7eiqoqGuvr48Ia9u9PWC9mz53LrmEO
      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
      7759o3o+mfn/9yo83CwLEJYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Calories Consumed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Calories Intake' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Calories Per Meal' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZrElEQVR4nO3dXXAc5b3n8W9Pz5tmRjN6Gb1LtoRkybZkC2xkEzCGbOJjAibUUmTPkspW
      paja7FZqK1t7sffc7FVqz0U2u5VK7bIcyKGAs5xQhwN2QQj4FWwZkGXLki1Z77KkGc1I8z7T
      3dO9F8YiDsaSrdZ4pH4+VxoY9b+7PT89L9P9tGQYhoEgWJTtfu+AINxPIgCCpRU0AJqmiRqr
      YBjGutfYDOfJjBoFDUAhhhu6rosaRbD9jVJDdIEESxMBECxNBECwNBEAwdJEAARLEwEQNiGD
      SGoBJa8AkNNyRFMR4NuzkPYC75kgrDvDgE+GP0KSJH7Q/hRHL/8zfneAp3f+GEm69b2iBRA2
      HUmSeGrHEeLZGP/z5N+hGzr/qv0Q0l9/+hEBEDYp2SbjlF1k1QwuuwubJN/2fSIAwqZjGAYf
      DR1FkiT+8xP/lZSS4sS1j297JYJpY4C8ppBMpjGw4S31IBk2JEPDkB3Ybd9uegRhPe1t2keF
      txK3vYQXHvy3xLOx277PtABo2SSTk1Ncn56l65FOslE36fgELbv24hPtjFBAkiTRUNa0/Nrr
      9OF1+m77XtMC4PJV0LmjBEl2U+mxc/TYabqeOIjPIaFpGoZhoOs6iqKYVfK28vm8qFEE2y9U
      jVAoxNGjR2lpaeHAgQNomobT6Vz170tm3hEWnhxE8bVQ5YsxeiVJQlPY+9CO5YGGqqo4HA6z
      yt2Woih3dQKKsYZhGKiquq41NsN5Arh8+TJut5vZ2Vk8Hg+ZTIaOjg5GR0epq6vD4XAwPj5O
      c3MzAOPj43R3d7O0tEQqlTL3ewDFVkp9hZu8phKsK6VeXyCaVAn61vdDLwgdHR1cvHiRUCjE
      4uIiFRUV9Pb2AtDQ0MCpU6cYGBhgdnaWp59+mrGxMZ5//nlzA9DQ2AiA3V5KMAiwxczNC8K3
      GIbBpUuXSKVS7N+/n1AohMfjYc+ePZw6dQqAPXv2sLCwQFNTE4cOHaK8vJyqqioaGxvFN8HC
      xtbU1ISqqgSDQRoaGigrK8PhcOBwOOjp6QFAlmUOHDiAoijMzMxQX19PU9ONQbKpY4CViDHA
      6ogxQOFqiAlKwdJEAARLEwEQLE0EQLA0EQDB0kQABEsTARAsTQRAsDQRAMHSRAAESxMBECxN
      BECwNBEAwdJEAARLM/V+ADWXIasZeEtc6LqEjTy6zS5WhRCKlmktgKHEOPv5ea6NT5POhZkY
      jzLQf4Hs+j8lRxDumWktQDIUIo2OQ9HAyNN/7nO6Dj6OzylWhSjGGpvhGMyoYdodYdmFCa7G
      3QTVEMnSEvQIJDSVhx/awc0OkLgjbHXEHWGFq2FaF8hd2YAnPcNEwqC+oopgXT3t9V4iSdWs
      EoJgOvMGwZKdtq49tH390ucGsSqEUOzENKhgaSIAgqWJAAiWJgIgWJoIgGBpIgCCpYkACJYm
      AiBYmgiAYGkiAIKliQAIliYCIFiaCIBgaSIAgqWJAAiWJgIgWJqJq0IYZNJp8oaEp8SFYUhI
      Rh7DZkcWq0IIRcq8FkBPcOb451y5Nk4qE2J8LMrl/gukxaoQQhEzrwXIJImrGpV2F3abwcXe
      03Q+foBSsSpEUdbYDMdgRg3TVoXQlCyqITM91I+zvpLMrEYiL1aFuBebaVUIh8PBaGSYUpef
      Kl8NKSXJeHSUnbW7SMQT+P1+JOnOXeRsNguA2+2+bY2iWBVCMjSGLvQS1d1U+cuprKtnW71H
      rAohEMvEeOOLv2dqaZJ3LrzJ6MIIhmFw/vx5dF1f8fdnZmaYnp5el30zrQsku3w8tO/R5dee
      KoCtZm1e2KAkSeKhxoeJ52L89z//N/Zt/R5P7XwW2SYvv+fkyZO0tLTQ29uLJElMT0/j9/up
      rKxkbGyMrq4uPvvsM9xuN7/61a+QZfkOFe+OmAYV1l1OyzIeGaOtqp2FVJil9CJ/3fNWVZVo
      NIrX6+UXv/gFtbW1pFIpXnrpJWpra/nJT35Cd3f3t35vrUQAhHVlGAanx05QVlLGv//ef2Lf
      1kf56MoH5I08sizzyiuvUF1dzcmTJ2lvb6e9vR1Zluno6ODxxx/nzTffxOFwEAwGaWtrw2Yz
      9yNr2iB4NcQgeHU20yDY6XSQUlI4ZScO2Ulez5NWUvhcpSsOfldf496Pw9Tl0QXh2yS8Tt/y
      K9kmU+r238f9uZXoAgmWJgIgmEY3dKaXJlHyCoZhkMjFCSdDpg9czSQCIJgmr+f5dORjPhx8
      n3Bynrf6XmcsMnK/d+uORAAE09htdn7c9TzTsSn+x8m/o7milb1N+0wZ7K4XEQDBVJqeJ69r
      uGQn6tddoWImAiCYRtVV3rv0DtuqtvPLx/8L84k5zk1+VtQhEN8DFGGNjfo9gG7oRFILVHgq
      sEky8XQcw6YTcJetWzdoXb8H0NU0Z08dZyaaxWZo+OtaeXz/g7jsouEQvs0m2ajyVS+/LnGU
      rPsfo7W6QwDyDPRdoH7HfvZW+pHQWZyboG9ghH3d7RTvsEZYb5qm8Yc//IF0Os0Pf/hD2tvb
      v/O9iUSCy5cvs3///gLu4erdIQAy23dsI5SVGTz7CVeuL9Lz/SPs7/YUbu+EotbS0kJjYyO/
      +93vyOVyvPjii3z44YfIsszBgwd599136ezsxGaz8cknn1BWVsbZs2c5fPgwLS0t93v3gRUG
      wdODg4STWXKqmwOPdzDwxWih9ksoYrIs88ILL1BTU8O5c+dobW3liSeeIBwOs7CwwLlz5+jv
      7+fIkSN0d3fzpz/9CYfDQWlp6fJVn8XijgGo2VrHF59+RNYOJz/8jPrtTYXaL6GIaZrGsWPH
      OH/+PE1NTdTU1BAIBPB6vZSUlLB9+3Z27tzJBx98wMDAAC+++CL5fJ5UKoXD4SiqccEdZoHy
      DA8MUlJWhppT8QTK8dlVxuZSdHY033YMYBg6qqrhcNjRdZDQMSR5eVUIMQu0Oht1Fmgj1rjj
      GKChoZKTJz9nMa0gYVBSWs1jBx/7zgFwbG6UT86Oc+jpXcxPymTiY2ztepjS4gm8INxiVd8D
      GLqOIUnY7jCXa+Qz9F8aRVJVHuiq4U9/PEfn4wfY1lh5y6oQ6/21eD6fN/WWuc1aYzMcgxk1
      VrwfQM8rRKMx5idHCW57iBr/7f+ch8dHuB6aJzY3j29LOds7d7K0EMZorMRuv1FGdIFW5+bf
      JNEFWv8aKwZAycxy/F9OkPZBedjLkae6bvu+6tZd/Ki1k5mJGSorAiQkmdp8mEhSJehb3w+9
      INyrFQPgdNdRWua8ca9maeMK77bRsPXGTJG7CsC79j0UhHW04jUNmhLB4W+ltszJwmzxzN8K
      ghnu2AIsXh/m2EenmApHmZryUN/5TKH2SxAK4o4BKK/fxgt/W0n/4AJ7H/ru6z0EYaNasQsk
      SQafffA2r7z2D/RfCxVinwShYFYcBMvOcn78t8+zEM8SLBMXwgmby4otgJKe5Y+vvcvM9AjD
      04lC7JMgFMyKAZDtXnbv20lkIQqaWOlZ2Fzu2AWKzwwzqQb4/pHnWJzsZ1zx3entgrDh3LEF
      SEbDzEdiGAYoSoLZ2cVC7ZcgFMQdA1C3Yw/28ABvvPEGxy8lObi/OO7iEQSz3LELJNndHDz8
      3Devi3iBI0G4FytOg4oPvbCZifVNBEsTARAsTQRAsDQRAMHSTHtEkpZa5NxXF0lrMnsfbiMR
      daEmxwm2dhNwiYG0UJxMC4DdW862B7Ywfj2KoauMDV6lqq2NgEtC13UMw8AwDDRNM6vkbem6
      vilqrPe52iznaa01TAuAYRg4XCWU2G0oeR2n046iKNxccuLmdOp6T6tKkrQpatyss57b3gzn
      aa01TAtAJhZiYGAIxXBQZ6+jaVsnttw0C0mVqq9vipckqeiXySiGGoZhrPu52gznyYwapgXA
      U1bDYwdrvvkPpQA7zdq8IKwLMQskWJoIgGBpIgCCpYkACJYmAiBYmgiAYGkiAIKliQAIliYC
      IFiaBQNgoGg5clruxivDIKWk0A3dtAq6oZNSUssXAOa0LIqmACs+jEcoMMsFwDDg8vwl3rnw
      Jlk1y8TiGG988SppJWVajWQuwT+c/79MLU2SVTO8/dUbDIeHWPlhVEKhmXYt0Eayo6aLawvD
      /O/P/xdpJcVzu17A6zRv0a9Sl59HWw7y1lev47aXsKW8mW1V203bvmAey7UAkiThlJ3sqnuQ
      kfBV3HY3W8ubTb1sV5IkWiofQJZkxqPX2F3fjUN2iBU2ipDlAmAYBlNLE7w38E+89Mh/oD7Q
      yLsX/3F5TGCGrJrlny68zQOVbfy7h1/ij/3/j+uxaVbxQE6hwCzZBZKQ+HHX87QFO9hevZML
      17809cNpoLO9ZifdDXtw2By4HR4Qf/2L0qqeE2yWYnlM6s1DvtkluXEDCvCdjwC/2xoGhnHr
      9v+y3krEk+ILV2PTdoGWlpb47W9/y+uvv048Hr/l//31bXQ3fr71w5nJZEin09/abjqd5uTJ
      k/T29t7hXtQb24/FYmiahiRJRCIR+vv713pYgsnkl19++WUzNpRPL/H5uXNcuTZFWdBFeD5P
      ZGYIm78Gt/3Gh0vX9YLdIpdIJCgrK6Ozs5O+vj5SqRTHjx9ny5YtvPPOO2SzWebn5/noo49o
      b2/n6NGjRKNRbDYbfX19fPjhh3z66ae0t7fj830zQ3T9+nXm5uZIp9PYbDb8fj/5fJ58Po+m
      adhsNrLZLAAXL17E7/cjyzLHjh1j69ateL1eNE1DluXl950+fZrKykocjm8Gyut9rjbC7YqF
      qGHaGMBWEuCRR77HteFhjLzC+NAwla0PfGtViHw+b1bJ29J1ffkDqes6Pp+PZDLJxx9/jNfr
      pbq6mlAoRGtrK8PDw7jdbvr6+ujt7cXtdtPV1UVdXR2HDh3CMAyCweAt+6xpGufPnycQCLB7
      925+/etfs3fvXj755BNSqRS//OUv+f3vf099fT179+7l/fffZ/v27fT19eH1ennvvfcYHR3l
      Zz/7GW+99RbPPvssx48fJxQKceTIERwOR0HO1c3ztJ42Qg3TukASKsODw1Q2tFBa4kC221CV
      b54oU6gpwL/sd7///vu8+uqrdHZ2UltbSzAYJBgMYhgGX3zxBWVlZXz55ZfYbDY8Hg8tLS34
      fD527NiBy+Xi3XffJRS69cGAsizz3HPPceDAAWZmZti7dy8PPvggVVVV/PSnP2Vubo7Dhw+j
      qio2m41EIkFDQwNPPPEEDz/8MHV1dXR0dGC32/nRj37E7OwsPT09HD58eHl8tNFXnNhINUwb
      BGfDY/z5q1G8Lg8797SQXfJgy03hrG1fXhWiWAbBaxGLxXj77bcpLy/nmWeeIRqN0tDQwPHj
      x5mdneUHP/gBx44do729nebmZvx+P+Pj45SWllJXV8fRo0dxu93s2LGDjz/+mJ6eHvx+P2fP
      nuXZZ59dbgHEILgwNSw5C1TsNUQACldj084CCcJqiAAIliYCIFiaCIBgaSIAgqWJAAiWJgIg
      WJoIgGBpIgCCpYkACJYmAiBYmgiAYGkiAIKliQAIliYCIFiaCIBgaSIAgqWZF4BcgvO9nzM8
      tYCqRpiaijE2eIFYTqyGJhQv81aGc5Wyq6uD6/M5DB3GrwxR0dxCS4FXhRA1imP7G6XGunWB
      JED9i4WjxMKwQjEyrQXQ0kuc6z3PUsLAHehia8cupNwk4aS6vCqEJElFv1BSMdS4sVTj+p6r
      zXCezKghVoUowhpiVYjC1RCzQIKliQAIlrahAnDs2DF+85vf8Nprry2P/BVFYXh4ePk9uq5z
      8uRJ8TAKYVU21BjgxIkT9PT00N/fjyRJjI+P09zcjCzLRCIRxsbG2L17N6lUCq/XS1VV1fLy
      g3v27DHtOMQYYPPU2FAtwE3ZbBZFUZYXmp2fn8cwDH7+858TiUS4cOEC09PTBAIBNE0jGo2K
      FkG4rQ33iKRXXnmFxsZG9u3bh6qq2O12KioqcDgcyz8/+eSTaJrG7OwsTqdTfAchfKcN1QVa
      jY3Q7K5EdIEKV6Pou0B5PX/LU9czahotr678i4KwCkUfgKXMIq/3/h/mE7PEsku8cf7vmY5N
      3e/dEjaJoh8DVHgq2dPYwx/Ov4rdJrOrvpumsi33e7eETaLoWwBJkmgLtpPTsoSTIbZXd2KT
      1vf6EsE6ij4AKSXFP/a9wb6tj/Bs17/mnQtvEkkv3O/dEjaJou8CGYZOz9ZH2F33EDZJwucq
      XeXjrAVhZeZNgxp5hi99RdoRZGdbkERcxq5FMAINBFw3PrL3Ng16d09d3whTbysR06CFq2Fa
      C5AJT5L1NeFJzxGJy8RndeJamr3Va/17LfGXn3XxpZZgJtPGALm0QXnQR8DrQ9FyXPrqPP5g
      jeiuCEXNtAD4Kj1MDFzh2mwYr9tD9yMHyc6Nkcit7z2hgrAWpnWB7KU17Oqwk5dLCPhclLol
      ZHyoossiFDETZ4Ek/OXB5Vc3xiUlyNy4Rh9uDO5u/rxeNkONm5d9rHeNjX6ezKhRsGnQm7M3
      633tnSRJokYRbH+j1ChIAGy2G0MNXdfXfZWAzVDjZguwnjU2w3kyo0ZBvwle75MhahTP9jdK
      jYLeDyAIxabg1wLlkotcvjyMktdJJRLoep7FpRj3lELDILE4T3gpBRiEpkYZmwlj5DMk0hrZ
      RIy0svZp2GR0josDV0greeIL1xkcmcTQNRKpDJqSJZ5Ir2n7hq4xMTzI4MgkOgZzk9cYv77w
      zXHEl0iraz+OpfB1llIquWSUgaERcppOIpkE8kSjsTVvPzwzxoULF4gmFZZC01wZncHQFRKp
      LGo2TSKVXXMNXU0zNDBAOJYmm4gwcOUaytfHYRgai3d5HAW/Fmho8ApVtRUMXJ3FTxyvz0bS
      Vk1Z2d1vS9d1FiPXiVOPnySTSwol2ihhRy0LSS9KbIYdu3atcY/zRGNZav0wMjlHbmGKmoCN
      q9fd6FkFORsi2NK1pgqGkcddWoEeGmHomkQmo+FSrxF1VDOf8JOLTdO5e23HoSsJLg30Ub71
      EXKhq9TWlHFlfA6HFqdUVqCyjYo1VYDpuTAtre24ZJVLE3MEPXlG5+woGR1Ss9S3rfXfwmDo
      4kVK61spcdq43D9MTbWfKxPz2LUEXjLYqzsov4stFrwFsHt81Ddtw65GSESmOT8SpbWh/J6+
      MbbJMlu2bEW2SWRyKnW1tdQ21qIk0gycP4O7ogGXfa2HKFNfV8lCPE9jjRuvv44t2x8gF1pi
      ZuQrImqACu/arnexyU6U2ByjYR2f06Curo6aumpyySwXz53GW9WEU17DcRg6E6OTtLa3IaHi
      8gap39oI6SyL10e4EtJpKPes6RgA1NQi/f0DRBMJAmV1NLU3kwsvMXmll4RUScCz1tthVWJL
      ScavXmY6NI/LG6ShuQkjmSY6fZWRiER9ufuutii//PLLL69xr+7KzMQoLqdONFOC31tCY5Wb
      hZRMeWkJd/udmWEYqNk4oSWVoM/GZDhOPr6ApzyAt7KF7NIMFVXV2G1r+TIuz+DAEA0trfjc
      bqYmRnHkkuRKq/AHqijRIki+IB7nvQ/G8kqavKucSmec+YRMOpdDiy/gq/DjrWwlHZ0hWF2N
      fI/HYeRVRoaHmJycIJyw4yRJiQwxw4XP56PWo5Gw+df4AVWQHZXUlxtMRiVyqSi2TIy8P0hp
      WT2OzDzOQBVux1oGrRKJWIwHtrczOxVCyyVw23TikgdfaSk17hxJezn+ktV3bAreBdrR0cbl
      a/N07t6Bkkzg9fuILCxiwF23AoauMDQ4TjovEa/qotoVJ+VporrSj9vroKTGTlrJr7EV0JGN
      PIOX+qlt7qCtuZqJaJ7ulgriKRWfK8hiKgvceysg2WRCEwNkZT/du9qYHR0k49lKsMKL0+vC
      XWMjreg4S+7tOCS7k57Hvo+WS5BUXbj1JS6PLdDZ2Uw25SMQKCUUigBraQUcoEYZXYJdnVtI
      hgxmEjZ21VcST+XxNgaIZXM33nfPbGzraGNgcITWjp148jEGJ6N07awlk0ri9/sIhyPA6lsB
      MQskWFrR3xEmCOtJBECwNBEAwdJEAARLK/qb4jctQ+dq32dcnk7z5KEnKXPfmB2ZHb0ClVuo
      C5Tc8nY9r5LJ5fF6bj/DMX/1LOOZChwOGy3lBqFcgI7mqlu3oeW4MDRMcmqU7U8+Q1WJWF5G
      tAD3SWZ+kBPDGZ4+9DhOI03vmdMMT4WZnxxhPp5l9PKX9A2Nk00tMjk6wrWxUYZGpkiEpzhz
      9kti6SxnTp8hnMgBGifOj7PnAS8Xr47y6Z/PUFFVxvhQHxeGxpkevcyZc31kslkuDg7zcE87
      Z05dvN+noCiIFuA+SUZmCW5pwel2k4/O0d9/gWun+vk3+7aghgc4Ma7TqHzJueQOLn4xx3N/
      08bgXJqvPjpGTLUxkU6hJ1I0qzqoSTSpHAcwPXSWsprdeJcG+OBKgqce28LoV19w4tRZ0vb/
      CIDTv4XU4r8AD97Xc1AMRAtwn1S07GJx4AxnTvcyNPglcs12gr4b/xySowQtESaS0nHbZbbt
      7MLvcQISgcpaep54ip7mevSZS5wbmgS7G8nIANC4/VG6q5J8ORFHTSwwFw5x8co03TsfwMh/
      fWeensJh99+vQy8q4ouw+yiTWCQSz1EVDBBZWMLpKaHU5cBwuMkshchJJQT9bnJ5GyUOSOd0
      HOQIRRMEKiqIRaMEa2opccp89sE71D96hHK7jscpkVZAz8bI4cYl5chqUBooJ68qhC+fJlq9
      n56We7gCcZMRAdgkjHya6bkMTQ2VK7xTZ3x8kubm5kLsVtETARAs7f8DhGXT7jvyr5MAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Days on which he consumed high sugar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Meal &amp; Carbs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Meal Statistics' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Meal Type with Good Protein' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5xVV7n//957nz5neu+NYQoDAww99EAKSUwxxkSTqIle67X8vleNetWv
      19u+0avmqvdabqJeSxJNYoIhgQRCH3ofGGB67+X0ssv6/TFAGoEB5gxDOO/XK4Fh9llnnXXW
      Z+9nPet5niUJIQRRolynyFe7A1GiXE2iAohyXTOhAtB1fSLf7rxomhaRdnVdxzCMa6ptIUTE
      xgMiN9aapjFelvuECmCsX+LQ0NBV78OlEsmllBAiYu1Hajwi2fZ4jsWkNIFMJtPV7kKU64RJ
      KQBJkq52F6JcJ0xKAUSJMlFMSgFE0i6NEuWtXLGx3XhiPz3+GBbNLuHIvhqGfWGyS6oIdp2k
      1x1i2pxFZCU6LqnNyeAtinJ9cMUCKK6YTriuE4RANtlIS4tHDgwhEgtYNi2G+p4+MuLzznky
      xuIakyQpYi40wzAi0rau6wghIvL0OttmJDxBVzoeIhzG6OtDjotDiosb17bfi7Ptjsdacdzc
      LUIIhGwiIT6OgYEhDLsNYQgkpHMdlSQJWb641aUoypiuuxzG2odLxTCMiLUthIhI21faru52
      M/SLXyJbbehuN7F33I69agZc4vd9qRiGgSzLk0MAxw/spqHDjbBYkTQ/DY0uMounIwYa2HEg
      xIw5C5GkURHouj6mAYnUwEWybVmWz/033kRKXFcqANffXiZ2+XIcC+aju1wM/uzn2EunIsfE
      AJEb67PtTgoBTKtexrTqMz8UZ7/5i9wUSi+zzWh83rWBPjSEKSMdAMluB1lBhMNwRgDXApNy
      xymS2/NRxg/nyhW4nnse56obCTc0Ys7KRI6Pv9rduiQmpQAiZf5EGV9slZUgyQQOHMCcnUXs
      HbcjXWPf3aQUgKIoV7sLUcaCJGGrnIatctrV7sllc23JNUqUcSYqgCjXNZNSAKqqXu0uRLlO
      mJQCiEaDRpkoJqUAovkAUSaKSSmAKFEmiqgAolzXTEoBRHeCo0wUk1IA0VigKBPFOCTE7KPT
      Y2fpvApOHdlD53CY8pmz6ak7SL83TPnsheSmOC+pTbPZfKXdihJlTIxDQswMwnWdGFqY3hEv
      CQlpxEgBlNRiVsyI4XTPAEaSA8MwMAxjTD5+Xdcjthcw1j5cTrtnw5Yj0bYkSRFLtrnWxno8
      MwbHzd8oSRJ2ZyJF+ZnUnTiJOSEXTVORJAVJklAUBSHEmOJ8ZFmOWDzQWPtwOYxXjPo7Odtm
      pJJtrrWxHs92xyUhpqnLBzY72Yl2jhyrI690BsZAI7uPdlFVPe9tk2IsX+LZjJ9IcS0lrUSy
      7bNrrWttrM8mWI3HzUaayOrQqqqOyb4fGhoiKSkpIn0Ih8NYLJZxb1fTtIhlhJ3Nfx3vu6kQ
      AlVVIzIeELmxVlUVk8k0LgKYlF6g6E5wlIliUgogGgsUZaKYlAKIEmWimJQCiFaGizJRTEoB
      RCvDRZkoJqUAojnBUSaKSSmAaFWIKBNFdKZFua6ZlAKIRoNGmSgmpQCi+QBRJopJKYDoGiDK
      RHHFM80z2M2p5q7RH4SgsfYwblUw2NHArn1HCOqXbs5EvUBRJoorFkBADaMGggB4BtvpbO1g
      xO+lsS9EeW48Ta09V9zJKFEixRVHnaVlZDA43InQVdp7PBTnp6OrIRwJSTjjHAjv8LmDng3D
      IBwOX7RNXdfHdN3lEKm2z4YsRzIhJhIbhNfqWI+Xo+SKBTDU38vg4ACDLifugX6aetpwGvE4
      Ai4a/CYs8XkoioKiKGMOh/Z6vddciO61Gg4NXHNjPZ7h0FcsgKA/TFpaAqphY8Hy5YR9Hgxb
      LIZvkF5XmLyc5EtuMxoNGmWiuGIBZOVPedvPlpjY0b/EJVMYd54XjIFoPkCUiSLqb4xyXRMV
      QJTrmkkpgOhOcJSJYlIKIBoLFGWimJQCiFaGizJRTEoBRIkyUUQFEOW6ZlIKIJoTHGWimJQC
      iFaFiDJRTEoBRBfBUSaKSSmAKFEminE4IGM/XT4HS6pLOXF0H31DXlILKlD7Guj3jB6QkZMc
      Mx59jRJl3BmH6tAh6uo6KS8rRCDo72rGFzBwCzsVmTGc7nFRXpR3Lh9gLOHCLpeL+Pj4K+vW
      e6BpWkSC7XRdj1h59Ei1LYRA1/WIBR9Gaqw1TUNRlMkRDv1WupobEM5UCpLhcLPrzBcnn/vy
      hBBj+hLHet3lEKlJerbPkQjlFkJEvN+RIFJ9Ppt3MSkEcPzAbho7vQizicG2RnS5C39ROU61
      j5rD7VRVzz+XKaXr+pgGxGKxXHNfSvSAjHcTqfE42+779oAMj8dDbGxsRPoQzQh7k+gBGVEv
      UJTrnEkpgGg0aJSJYlIKIJoPEGWimJQCiBbGijJRTEoBREsjRpkoojMtynVNVABRrmsmpQBU
      Vb3aXYhynTApBRBdA0SZKCblTIt6gaJMFBeMBRK6SuPJo9S39iFJAmdKDtUzK7GbJ6VuokS5
      ZC4gAEH9sf245UTmLliIWdIZ7O9h7+5DLFpSzdmIHiEMDAGKLCMMA90Qo3dw8ebfo7Vux44Q
      gh1NW3jlxFrsFgf3z3qQoqSSq92t9y0XuJVL5ObnY7bYaNq1gT899ywNw1aWvWXyAzSfPMjO
      /XUIQ+fovh1s37KRxp5hDu3eztatW2gb8Fxyp67nRfDBjn28fPxFPlh1P0uKlvPzHT9m0Ddw
      tbv1vuWCJpB3uI9hl4PiKbP52I0OXlnfBry9GnRR+XRCdZ0ITUWJT2f53EKO7t2NKW0KSzMc
      nO4ZxEiOOZcQM5bJPdbrLgdd1yPS9tlQ7yuNUDzScZCqrNlUZc4GYGv9Jk731ZFgSxz3YgFn
      E2KuxbE+myNxpVzQBErKLmaw5lk6pBi8bwyz+LYHRgPVJIl3vbUEWlhFC/vA7EQLBVFVE7Js
      OhfKK4QYU4aQ1WqNWJbSWPtwOYxHOHRuUj772nbjCo0QUP2MBEfIjM/GZDJFzDt2LY71hGSE
      NZ88TmbFQqaXFmG3KLQ3nGBrTQuLb5h17oXHD+yhpccHNjtJNoMdu2upmrcAV0ste4/3MXP2
      nLd1dKydjuQhGZFo+2zSz5W2vbR4BW3DLfzjK/+ASTZx27Q7KUgqOvce48nZqNtrbazPthvx
      hBhDC9PecIL9x04R1iXyp05nVmUJdsvlqTqaEDM2dEPHE3IjSzKx1rhzOcHRhJhRJuyIJNlk
      Ib9sJvllM6/4jS6F6z0cWpEVEuyJV7sb1wVjuJXrbHvlBVoHgxRWLmLxrOKIdyqaEBNlohiD
      AHy4Qik88MASpAkKUYhWhosyUYxhRpsIDjfyl7/8hT3HWiLeoShRJpKLPAFUOtoGqKyeS9Aw
      SEyNTLGqKFGuFhcRgIzNZuFkwwl8llgCpiQKsi793N9LJVoePUqk8Yd9HO48eDEBKKSkxdHa
      1kxG0XQ62/then7EOxcpt1yU6xchBCEtyOHOg7QON9Pv6SUtNmMsi2AHNyy7gQMnelhya0Xk
      ewqEQiEcDseEvNf1guH3ow8PoyQlI9ttV7s7E4o/7GNn8zY2nnoVm9nOTaW38cEZ92NSTGMR
      gAuvmslHPzKLffvbyUsujXiHo27Q8SXc2srIH/6IZLMhwipJj34CU1ra1e5WRDACAQL79iPZ
      7SgzKtjWvJWNp9cTZ4vnnqr7mZldjdVkPXf9RQQQZstLL7B2cyM1u1OZueLuCHd/lKgbdPwQ
      QuD6819I+OhHMOfnE6qrY+TPz5Hyhc9d7a6NO9rgIH2P/xCXHGS/tY/9h8MUFs/mE/M/TWla
      +Xl3ji8iAAvL77yfzq6nwGGPpipeiwiB4fejJCUhSRKmtDQM18jV7lVEaNn1OptTujlRbKMk
      bS4PvtZMxZybiUl/b9N9DCZQCCUml5tWF7NpXydU5pz3KmFoHN5bw4g/TPaUKoLdJ+l1h6io
      XkR2UtSev2pIErYZM3C/tBb73Dn4t+/AMX/+1e7VuGEIg15PDxvqXmbP8GZKczL5yvIvkh2X
      Tf+r/4SkXjisZkzVoRuO7uJku4vqG5aRmWA/7zVCVzl2+BCyxYLNaseHg/KsGOp73JQX5Z2L
      PR/LU2RkZISEhISLXnc5RPKAjEidD3A2D+Byn8BC0/Dv2Eno9Gls0ytHBXCmrUiNRyTbPjvW
      3Z5OXjv1CrXdRylPm8aNiXOwP/k89rIyDL8PdWCQlG98Hclqfc+2xhQK0dYHa269+YKpjUII
      hGwiKTGB/v5BDLsNYYhzB2TApdWLv9Zq1kfyfIArPiDDYiF25QpiV64Y33YvQiTaNoRB60gz
      r596lcbB0ywsXMI3Vn2XlJg0JElC+4d8/Nu2Y8pIJ+HjH0O2n/+GDWAYYixPAD9P//QXuJ2p
      TJu1iMUzzx8MJwyN2oN7GPKGyZoyHWOggY7hEFVzFpISO+rXH2s4tNvtJi4u7qLXXQ7XQjj0
      +dq+3sOhw1qYut5a1tf9jT5PHyumrmZZ8UpibZc2T4QQuH0hapv7WLer/sIC0AIj/PW55xhW
      rXzg3g+TEXdlHyaaD3D5bV+vAtANnWNdh/nb8RcY9g+xqvQW5ufeQJIz+ZLNzb5hHxv2NVJT
      2056YgwrZhVc2AQa7GwiqXAB81O8HDlYT+KiUqyXmQwT5QoQBsLbhyHLSM50JPn9XzcppIU4
      1nWYV068hDvk5pay27mhaCk2k33M+SJCCAIhjfqOQf66/SRdgx5mFKXzf+5bSGFWAoosX1gA
      NqeTjroddJgMAmGJmHjbhOQDRE+KfxNhaGg7f4R6av2oG7P0VqxL/s/7VgS+sJc9rTVsb9yC
      IiusKFnNnLwF2M3vbcu/EyEEfcM+9tR1svFAE1aziRWzCphXlk1Kwts9khcUQHzGVD72qamX
      90mugGgw3JtoTVtROw5gv/9pZFkisPaL6C3bMRUtv9pdGzeEEHhDHrY1bmZLw0YSHUncOf2D
      VKRXYjG9twfnnaiaTke/m7U7T1Hb3E9xViIfu7mKaYVpWM2jSfRCCFBVwu3teDduGt9jUseL
      aGnENzGGW5ES8pGcaciKgpyYjzHccrW7NW6MBIbZ0rCRbQ1vkBabwUeqP8bM7Oox2/dCCEa8
      QWqb+li3u55ASGN+RTbf/VgFOWlxb7tOGxwkcPAQvs1b0F39WHOUySmA6I7zm5gKbiB85Bn0
      upfQAb37KJZ5f3e1u3VFCCHwhr28cXoDWxo2kZuQxyMLPkNZ2jRMytim5FkzZ8PeRnbWtpOa
      4OCORVOZUZxBrMNy7hp0nVBDI743NhM8Xos5zYEtz4Osn0ZJzooekzpeRM4LJFBbagjv/RWS
      JGOZ/2lMefPh3ZWZLr3lCfYC6YZOj6eb7Y2b2dWyncrMKm4uu528xLGH2PsCYU609PG3XfV0
      D3qZXZLBzfOmUJT1ZhEBoetofX0E9h/At7MG4XdhK7ZgSXJBsAVTwRLMlfegZFZNTgFE9wHe
      3fa17AYVQtA6PLp5dbz7KDNz5rBq6i1kxWcjSxcfLyEEvcM+dh/v4PX9TditJlZVFzG3LIvk
      +DcXtUYoROhEHd5NbxBuacGc5sCa4UKW2pBtVszT7sFUvAI5PvvcayalAIaGhkhKSopIH6IC
      eJNICyAYCtDt7eJvtS9wuv8kc/MWsKbiTlJiUsdk44dUjbZeFy/XnOZ4Sz/F2UncOm8KpbmJ
      WK0WZElCGAZaVzf+Awfwb9+BZBJYshQsyX3gb0PJqcY8/UMoGTOQTO/+nNE1QJRxxxAGjQP1
      vFL7Em2uVublL+SB6odJdaaP6fVDngCH63vYsLeRkKqxaFouH1oxjZzUUatAVVWEz4fv6DEC
      e/cSbm3FkpuKc7aMrDcBOqaSWzBP/R5yQu4F32tSCiDqBbr2EEKgGxon+06wvu5lej09rJiy
      mofnf5IEe+JF7/iabtAz5OX1/U3sPt5BVkosdy0ppao4A4dt1GoQuo7a1oZ3Zw3BAweQnQ5s
      JcnYs0II306UuBLM0/4eJXs2kiVmTP2elCZQdBH87rYnswkUUAMc7TzI+pPrCGlBbi67jbl5
      CzFhumjb3kCY4839vLK7np4hL9WlmayqLnrbolb3eAjsP4B/9x7Ujg4sJVnYsjRkvQ4MFdOU
      VZjLbkOOP3+o/oWYlE+AKNcGmqGxq3kHr9atxRAGt5bfwdy8BTjO3H3D4fB7vrZnyMuOo21s
      OthMrMPC6jnFVJdmkhT75o7v2c2q0PHjyHFx2CsziJnajxjahGyrwFL56dG7vfXyb5bjJwBh
      cOrIHjqHw5RXzab75EEGvGHKZi8kL8V5SU1dzwdkXAv4wz72tNbw2slXMCkm7ph2N/PyF6LI
      F55OobBGU/cw63bVc7yln2kFqXz2zjlML3ozP1kbGBjdrNq+AxHwYy3NJX51HmJ4D8JVg6ni
      Llj2eSxJ+eNSqXDcBGBoYXqHvcTHpxIjBzClFrNiRgynewYwkhyXdEDG2UdzJIjU4RtnP1+k
      EmIkSYpIjNSljIcv7KWmdTs7mraQYE3kzmn3MiNrFmbFjKELDP3t7Zxte8QX4lB9L6/vbyIU
      VrmhMocPLSsjK2X0zq2Fw6inTxPYsZPg8eMo+XnYqjKwWNsw+l9Fd+dgmvEASu58JFv86MEb
      Z8zCK2XcBCBJEvbYJKYUZlN3og5zQg6aZkGWlEs+IMNsNl9zhzZcbA2gBvwM7NiM4vZhW7iA
      uKxcxrKZ1ePuYndLDSnOVObnL8KsjF/BACHERcdDCMGAr58tDRupad5GYXIxH5/3dxQlT0G5
      QEDeaFyOh82H29h3sov8jATuXVZB1ZR0rGYFYRgYbje+ml34d9YgggEc1ZUk3jUNo387jPSh
      lN6KdeF/IicWwFueLmf7HPHzAS4JIehqrqO+vZ/80hnoA020DQWpqp5HUszol3a9LoLVcJDW
      Hz8OugEJceinG8j40peJL7xwoGHzYCO/2vUzytKm0e/tJd6ewCPzP31RU2OsXGgRLISgz9vL
      xlPr2dtWQ1FyCWsq7qAkteyCbXoDYWqb+nh1TwP9Iz7mlmeztCqP4qzRfR0jGCTc2Di6WdXY
      hKWkGNuUZBS5AaNrD5I9EXPVAyh5C5Ad598LmrDzAS4JSSKrqIKsojM/Z1QT+cDpa4NA/WlC
      3V2U/eA/UcwWmv/4JN5NbxD/yQsLYMPJdawsWc2K4pswhM63XvkHOl0d5CUWnPd6YRh4Xl6H
      r2YX5swMEj7yEUypKZfU17N3/NdPvcKe1hrK0qfxlWWPkZuY/553fMMQdA952X6kla1HWklw
      2rhpThHTi1JISYgd3awaHMS3eQv+ffsQqorzxuXEzElBdG5EdPcg5c7DduvjyMnFSJcQAXql
      TEov0PvtgAwhy0iGwDB0FEaT1IVy8QWcSTah6qNjYQgDgbhg6IBn/QZC9fUkPfoJwk3NDP7X
      f5H69a8h2y5eCU7TNdqGW3ij/jWO9xxjbt4CvrX6+6TFvvfmVTCs0dAxxCu76znVPsiM4nQ+
      84FqqqZkjP5+eJjAocN4NryG2tmBdUox8XcuQ9ZPoTX8AhFIx1R6K+bSW67Ik3MlTEoBvN8q
      w8VMmYqlqJCWf/ouIi4G0dNH6v/56kVfd0v57fxs+49oHmhgwNfPjKxZZMVlv+f1gYMHibvj
      dqwlJZjz8vC+vhF9eBg5M/M9XyOE4GTvCV6tW0vrUDNLilfwzdXfu2C4wog3SE1tO5sONKEb
      gpWzC3no5hlkJseOmlU9PfhravBu3Y4S68SxYA5xq0sx2jZg1L2CXLQM+83/gpxegaRc3Tqw
      0Y2wd2CEQrh3bEfv6sZSOQ3nzFljsjUvtgg2NJWBfTXIHj/2eXNxxF88p1UgcAdc7G/bQ0pM
      KhazlaOdh8hNzGdu3nzM75g8w3/8EwhB3B23o3Z3M/yb35H2j99EOc9YqrpKff9Jnjv8DIP+
      fpZPWcWqqbfgtMaet19hdTTZ5LV9jew/1UVJThKrqouompKBIoHh9RI8Votvxw7Ujg7sM6Zj
      mZ6LWWpDO/UqmG2YKz+IeerNYHFekf0+nmuAqADegtB1+n/7FGpbO6b8PELHaom/94PE37Dk
      ou1Geif4SNdBXjj6LLNz5tI02EBOQi4fnv3Q20wiw+tl6MmnCDc3I9nsJD74UWyV097Wlm7o
      1HYfYX3dywz5B1lStILFxctJsJ+/DpMvEOZwQw/r9zYy6PKzqDKXRZW5FGUlInSdcEsL/ppd
      BA4fRnHGErNkEaZED6J3F1rXYUy580dDj9OnjZttPzkXwe8DdI8H367dZP/rv2JJS2dk53a8
      L79yXgGouspzh5/mYMc+suKzua/qQTLjsyLWt5eP/5X7Zn2UquzZjASG+f6Gb7Gm4k7i3zJx
      ZaeT5M9/DsPvRzKbz9XEEUIQ1sMc6tjHa6deRdXD3FR6G7Nz5mCWLO+6Iei6QeeAh21HWtl+
      tI3UBAc3z5vCzCnpOO0WDLcb77bt+LZsRR8ZxlZRRvIjH0a49qM3/QK9U8M8/V6URV/BHJ+B
      NIaQ56vFpBTAVcsJliUkRcEIBQEQgQC8x9Pib8f/ynBgiM8v+Qr1/ad4cvd/8bVV38Ymjz15
      +70IayGaBhuxmCwUJI661awmG37Vf+b3YSRJPu+CWDKZUN6SS+ENedjdspPN9a9jM9u4tfx2
      qrKqsZgs79pwDIY1TrcPsm5XPQ2dQ1SXZvL5u+eO7tTqOqH6BoZ37yZ49BimjAxibpiLJduM
      3vQq6q4/o6RXYl36VZSsWUgmK+FweFJPfpikArhaVSEUZyyxN99E3w/+AzklCb27h5QvfOG8
      1x7pPMADsx+mIKmINGc6G+rW4Q17sV1C9YLz4Q15+dn2/6DL1YEhDOblL+Qjsz7OvVUP8Iua
      J9jbWkOPu5tVU2/G+R6eEyEEQS3IloaNbDy1nhhLDHfPuI/pWTPfVhr8LMOeADuOjS5qAW6e
      N4VH1swkLTEGY8SFd+NGfNt2YPj9OObMJvlzj4BrH9rJX6N26pim3oT1hi8jxWZMnmoVQqB7
      vQT2H0BJTsZWOe28oROTUgBXqzy6JMsk33MvtooKjO5ezOVl2DLO70EpSS3jQPteUp3ptAw1
      YTVZcZivvAjwptPrcZgd/OSeXxLSgnx73VeZlTWXioxKvnXT9znRc4zs+FwKkovO+/qRwDA7
      mrawpX4jyTGpPDz3UaqyZ7/rurPJJq/urudIYx/l+Sl8/JaZTC9OQ9I0QidPMfTMDoLHT2Ap
      KiJ29XKsxYmotX9G3fxrlOxZWOZ/BtOUlZPyLq92dTHwnz/FnJOLPjhI8OBBEh56EOkdEbWT
      UgBXm5iyCii78Gk4d8+4j6d2/4J/2vBNEmyJPDTnUWymKzd/RgLDpDjTkCUZu9mBw+LEHXQB
      kOhI4oaiZed93ZBvgDfqX2dv2y4Kkop4dOHnKEktxfSOXWNfIMzB092s39vAgCvA8pl5fPvh
      peRnxGO4XPhefhn/vgMYfj/OpUtwrlqMFK5HPfYrQs0+TOUfwFL9CZSUkiv+rJHEs34DMYsX
      E3fH7QhVpfuxbxDT2YklL+9t10UFcJnEWGL4/OKvoBphFEkB8d4eCaGquNeuxbd9B3JcPIkf
      ewhr8fn3yRcWLuGXO39KrDUOT8hNSAtSmVl13msNw6DT1c6m+g0caN/HjKyZfHHpV9+Va6vp
      Bu19LrYebmXnsXYyU5zcsaiUqinpyEE/Rls7A396ajTWfsoU4u+9C3Oigda4AXX7z5FTSrAu
      /DxKdjXSO0w8b8jLi8f+QvNgI4XJxdw1/UM4rZcW/RsJhKYhnbUkZHn0KXUe03pSukFdLhfx
      8eN7JKvQdcLNzaj+ADHlZW8OzjhxITeo5/WNBI8eI/6+e9EHBhj8wx+wPvghHFPLESaFHncX
      6bEZxNriEAjqemp5/dR6HBYHt0+7m1RH2rsSYnxhH2trn2dX8w6mZ1WxpuJOst+REBIMa5xs
      G+DlmtM0d48wrzybxdNzKc9PQe/uwVdTg2/3HhSbFceiRdhnlCJGDqLVv47wdGOachOmsjXI
      SUXv6XL8/b6nSI/NYF7eQva27aLX08NDcx8BIhd3NRY3aLi5mcFf/hpbRQVafz9yjIOkT30y
      wiaQEDTWHia1bCbh3kbqu33MmjUDm+nS/LXj7QUShsHwb39HqL4BFJlAUhLJn/0M8gQdxBc6
      fhzHgnmYcrJpOLgZR3cP3X98CmxWti2Ix5GQypB/gA/PepApqaVUZEynImP6udefDQ0RQuAP
      +9ja+AZbGjaSm5DPN1d/j7TY9HN3fMMQDLj87DrezhsHW5BlidsWlvDZO+eQaJUJ1tYy8Jff
      oba2YZteSfxDD2BLs6Od+DOhjT9HdqZhnvkRTLnzkGwXvwk1DzXygcp7iLcnMD9/EU9s+0Fk
      BvESsRQUkPKlL+LfswdHYQGO+fPeNflhnAXgGWins60Tc94UevrClOcl0NTWQ0XRe2/Fn4/x
      DlcO1Z0k3NpGxve/h6rreJ58Cl9NDbGrVo3r+7wX1rKy0ZQ+pwVt3UZMGenM/sfvsO7pf+eW
      /jSm3f5F2odbeebg//LVG7/9rtcLBEO+QbY0bmRv2y4Kk4r41MLPU5xScm7ih1SN5q4RXt/f
      xNHGXsoLUnj0tlmU5yYherrxv7KWngMHUBIScMyfT+JH7wZvPaHDTxA82IepcAn2O54YDUa7
      hA2mvIR8Dnbspzp3Lgc79pH/HoF6E44kYc7MIP6uOy942bjNNKGrtPd6KM5PR1dDOBISccY6
      EJ5hdF0/lzByoTS5s2iaNqbrxkp4aAjJGYMqBLoQEB+POjg0ru9xNmnlfJPHsvgG1IEBfP/1
      JFa/SuIXH0F3OBiyaZR4/ITDYWyKHX848K4+9Xl7ee3UOg517qcys4pPzf88+YmFyJKMpmr4
      gyr7T3Xz2v5mRrxBVs0p5BsLFpIVZyW4dx+Dz+xG7+rCPm8e8Y8+guzUMBrXE9rwQyR7InL5
      PSiFS5DsSaOV5y4xWeiOint4sfYvbG3cRG58HndVfujcZ9B1fVzH+CyGYYxbvL04AEwAACAA
      SURBVNi4rQF01cO+mgMMdLfhrFiAwz9CnNOMkpBHSc7o6fJXKxTCCAbp+/6/YJteSUARDGzb
      yB9nhZg162bumXHfu2JqLoexhEKEwn5O/fjfMJITUDLSCW7dQd3CbMrnrOZQxz4Kk4pZXbYG
      Qxh0jLSzvu5vHOrYT1XWbD5QeQ9ZCaM2vhCCIU+AzQdbWLe7nry0+NGygPlJiO4ufJveGA1N
      SE4hdvUqbNNLEIPHCR/+E8ZIG6b8GzBXfRg5pXTSnw9wPiZ1LJDq92BYYzF8g/S6wuTmZKKc
      6efVrAyn9ffT9tKzHG89wJyP/D2h9AR+t/d/WDZlJcunXLkpNNZYIL93mLb1LyKPeLHNm8NQ
      koW63uNMTS2lKqeaLlcHG06uo66nlpnZ1dw49WbSnZlnni4yXQMe3jjUzI6jbRRnJ3HnDaUU
      J1gIHT5T9NXtwV41g5ilS1CcOlrLFtTaF5AdyZjKP4CpcCnymRDna+GAjPMxXgIQenByeoEi
      VRlub9su1tW+yPfW/D8Anjv8NK7gCI8u+OwVtx0MBznWfZgOVxtVWbMpvARbWtVVGgfq2Xjq
      VVqHm1lUuIxlxStJPJMR5fEFOd7Sz6aDLbT1uphXns2NM/NJD7kIbt9O4OBBzDk5OJcvw1pa
      hBiqQz3xInrPsdG7feU9yKml7wo9fr8LQAgBQkMYQYTqQg91o/sb0YOd6IF2hDo0OfcBxqv+
      jRCCw50HONJ5kILkIoqSSxgJDnOgfS+x1jiOdh/mptJbr/h9DGGw9vjzNAycpiCpiF/t+hkf
      rf4407NmXvB1YT3M8e6jbDi5jmH/EMtLVvGxeZ8adYeeqYe572QXr+1twG4zs3pOEZ+7dTr2
      9hZ8z/0BV08P9upq0h77OopDRz29nuDLPwTZhHnaXViXP4Yck3rFn+9aQAgdoXkx1GGMYOeZ
      Sd6KEerB0NwAyJZUFFsOppgyrMkrkK2Zk1MA4xVSvK9tN7tbd7Jiyipqu4/S5+nl/pkP8/SB
      /8UfcHFT2W0syL9hTG0Jw0CoKpIsv2sPwRN0s7tlB/940z+TFJNMefo0Xqp9/pwAhBCENR0J
      CbNJRjNUjnYdZm3t83iCblaXrWFRQhXqsy8y3LaNUzMXsDsmh0MNvVQWpfHIrVVMcYBxYD/+
      Z3YQUhQc8+eR8NBHwNeIeuhHhPtPIqdPw7rs66Ohx+aLZ4FdawhhgNARuh9dHcEIdqAHWtD8
      zRjhfoTqAtmEbE5BcRRicpajpN2GbE1Dku1Iig1Juo5CIbY2buLBOY+QGZdFcUoJP9n6ODdP
      WcP0xA/hP74TmpsJhw6izJ93wcepEQgw/L+/J1h7HMXpJOHhBxlOz8Tt1UhJsGG2yEhI6GJ0
      /0LVw5jPhCBousHanad4bV8jimKwcI5EvXsHIT3EzWW3s6hwMRZMnH78CY75ZXbEVhFsCrM4
      5iT//vE7iGlrxPfynxk5cgQA24zpJH/2EYy+WsJvfA0R9mKeesuZu/2l5f9OZoQRxlBdCHUQ
      PdSD7m9BD7afuaP7kGQLii0T2ZKOOb4axZaNYstBtlya6fy+FkCCPZE+Ty+ZcVl4Q14UScZo
      7yC8/yBJn/0M6AZDv/41SlIiWl8/pox0RCCI7vVinz0L+cwBy55XXkWSZdK/+x203h42P/ln
      /phYhqqrOGw2HntgCctLVvHE1sfJjs+lceA0y0tWUdO8Dd2Xyc7jzaxYItjcsJ5X63Q+OPtu
      bp2xDKvJRme/m03769jiSiZ/ah4fnFPE1L5mwn/8PdoPTzDkcoHDQeq3vwW+Hrwv/gT/s5uR
      rHYsVQ9gKr0FaRyC8K4mhubFCPWgB1rQg2ft9G4wQkiKHdmaiWLPwZK4ENmahSEnYLbGI5vG
      Vv/zQkxKAYxX4aoPVt3Pr2p+xpaGjXhCLu6tegAOd2KdWoLpzCLbnJ/PwI+fwDKlmODRY8gO
      B5bCAjyvrif1K19CSUwkVF9P7OrVmFKS0ePieNZWyN/fPZfq0gLW7jrGf6/dww/+7g6mppbT
      4WpDMzR2t+zEJJs53dGP2aHR7C7kSzd+jnVbXCiBFA6c7GfTgWba+1wsLM/iy7SQZ7Ogrt1F
      6ORJLMXFJD78EKEThwk37MQ4/Uu0U9uRdDOatIa4e/8/JIs1IoW4xhshDIQeACOAHurDCPei
      +xrQg50YoV4MzYNsikO2ZqA4CrEkr0Cx56JYM0G2APLbPqeqqkhjPEnmYkxKAYzXGiDJkcyX
      l32NXk8PSY5kYm1x+Epj8D39LLaZVaBpBA4cIOGBD6OkpaF2dIIkkfSpT+L+28t4N28h/p67
      sVdV4d22DSUpEV9nN34hkZUUh0mRyU6JxePTkSSJktRSnFYnLx17jnn5i9jftpvMZCfenlLW
      FN2Nd1jnZEsTRxr6yE6JZVV1IdMtaViOHMDv6ce/pRvD68U6dSqJD98Nrhqkvj9jCvYSOFxE
      oLEAQ7VhtQpcz71AwgP3wyQTgDA0DHUQI9SD6m1GDXehBzsQ6jBC6EiSCdmWjWLLHp3o1gxk
      SzKSOemqhFVPSgFciReosaODn/2lhmG/iaoCO5/70FLykwrP/d6clUXc7WtwPfNnUGRAQnLE
      IMJhJIsZEVYRhoFstyNCIQCcq1dhBAIM/vy/kVJSqMwr40cvvYEltg/PQCpzK7JHwxX8g7x+
      6lUG/YMMePv47OIv0zLQzv+2Huaff7cdm8XE7JIMVpWlkdXbgrr+GQyXG6ZXkvrYYygJTvT2
      g+jtW/Fv+hJ6ylRib/waaqeB56nfo8Q6SbzvPmwV5fT+0z8Td9ttKAljCxpUdZW/Hv0z+9p2
      kRabwYNzPkFG7OWlcAqhgxEaXYyGetD9zeiBNvRgB0aoZ3RMlRgkaxZmRwGm2Gko9nxkSwqS
      ZAbZMmmeXJNyH+Byd4LdXi9f/dk6Vs4uYEpOGi9tryU7JYZPf3DluWve6ZsOHD3KyJ+exj5j
      Bp4Nr6HEx2OfN5fQiRMkf+ELmLPeHsdkCIOnap6kuy4GX1sQW5FEcQXoYtSzMz2riiH/ECYj
      nhitgppj3ThM8dw4M4955gD2k7UEDh3Ckp+P44aF2KuqQAqind4wGoUZHKE7cSq7OvrpsVrJ
      qKjmgzMfwP2jn+KorMRSVITsjGHgP39K+v/97nkrPpyPv9W+QOtwM7dPu5uWoSa2NGzi6yu/
      jXKBEuZnTRehuTBCvejBjjMTvRNDHQIjhGxJQbakozgKUGxZo/a6NQNJsV/1fYCxMCmfAGNB
      CMFAZyPB+tOY8vLIKJqGJ2gw7A2zakEZtX37SUzzUd9tRSCQzlOHUwiBkuPGutKH1t6E/VYH
      ltgliAAkf+mLmNPS3vUaTdfw1x/lEx2J9Dp13gj3sbnew4qS1Xxl+TfQgk427D/Fa/tPYrUf
      Z26RjXsxYX79GTS3G3npUlK//lXMGekYw02Eax5H7zqInFiEedZDiIRS1B//iBWuGAxd51DT
      Dt6wJ7MgNY2RZ54Fw0COdRK7Zg2yc+xx90e6DvGByg9SkFREZlwWr5xYy0hwhGRbyugdXegI
      zYXmazw30Y1QL0a4DwDJFIdiL0Cx52BOmItiy0VS7EgmJ5J0zU6jySmAsSyCOw7uYOiZp6Eg
      Fzasx79qJUlzVxJjM/GvL/4PA+ETBPvLcNoH6RwpIych711tGP4hXC/9DjlYha1iBiJngKF9
      x5ClIkx6GBPvLl8rGQZTOw3+OM1Hg95Lmmbj4b4KjLIVPPliI539HuZPSWZF1mnyTjVQeNpE
      fYKCe85UjsfZ+NyCGdCzF//OF0ANYCpegf3OnyOf6Z/rxZfQrCYyfvLvyKqG9I1vcnDrToK1
      PjL+/V9R29oJHDiAPjR0SXfAqallHO7YS0FcCj5/JwXmESzDrxEM9+EPd+H3dxLSQiTFl6LY
      MlHs+ViSlo7a6LbsSWOyjDeTUgBjGezBvz6PlBBPcq+fgVgH/S/9lT1xw9y+Moc/vhoAYyUV
      OQ6SS06x6fQGPjbvU297vTAMXM+8RGCjD+Q9+LbtwshIQExLQsl00vPL/ybjM58lJnP0jCkh
      BKf7T/LqibW0pA+SbM/H5k2jdyiJP/Rlk7yvkVXFiZRa+1F2v4gv5MU3axGbY7pxZGZRIsvc
      2X4a47lPomVUouSvwVvTjl4/iMN1gthbckGSMIZHGBjppvFH/4Y1LgFZEsy0FCCZTmHJzcWS
      m4vhdhM8UXfB8RFGGCPUjR7oRA92sMLRRHffHoaPr0eRzTxYOAVFeNk1MIhhyaIw8y7eaN7F
      rJilzBvj5uD7gfETgKFz4ug++oa8pORXoPU10OcNUTF7ETnJl+avHUs+gMUTxOZMZle5IK6u
      h2xPGFSVvfV/YEq5je/c8xNsZjNP7h6trvC2rhoaw64efG+8gW15GrZZhQRr+gkdbyfjw5/H
      5CynUwiGdmxFueteTvQe47WTr+AKjHBDwY2UnczgWEs8rs4RpvkHuLFUJtt9BOPFVqylU2m5
      aRZbRT03F1WRs/8Ai5vrMXsGqYtNYbj6Yyyedj99//Y4topyHIsKcK9fD5JE7C03I5VPoWjD
      BhrkRuwtKtk+C0k3r8Hb2c/QU7/BlJ6Ob8sW4u//MOLMQtRQXej+5jMTvhU93I8I94NsQzYn
      oziKiE2cS0LW3Si2bFBikCQThhDUnPwOX1z2KRLsicTFl/HbPb+KCuCykGTKq+aR3NmMP+jD
      nVLEiukxnO7pJyvRfi6GeyzmzXsd2hD0u5EamlEtCpaQjn+4n6DwkONXsKsSKzb3UdaigTnA
      y8a/0pXtoGmwgS8t+dq59lQtxHOHfsOhpp18Xii05ORTnpkFqW0g2zHMBWiaht87Ql2onQOv
      fwdN15mTtQLVlM2W7f0EgkkscYS5dWA/cQE3Sms2loULcHz0AUxpqVT01jK04bdkN28lo8tP
      vz8WJVzCqWmx3DLlFkJ9/WgDAzjuuB3JasURDuPbsgXbjStxtzTCkvlMC+rIDgfuvg68/T0k
      fO5RPM8/RXD/JuwrCzESt+Ku+/1o/IsAyZw26l50VGJJykG2JCNbUuEd9rn+lv8JBCbZhCfg
      IcbkxOUfwapYx20fJlKHkYxnxuC4mkBdzfUIZzoFKYLDzS50XUOSRjcxZFkeXXSOwcV5vgPh
      gkP99Pzg/6H5PEiagcUdQEwvpiAwRHJPOyYdvCdPcHpWPGtu+jTmX/wU+QMzuN2+mpwBDSVZ
      AlnmSNM2mgcb+dbtPyZU/yQJz+zFtbkDMTCMFuug/vHvU1ugsCd0Cjkxjqq4D+DuT+GVjQPk
      J/RxR2yQgqETmJq7sS+YjWPRIsyFBRh6AL2thvDutRgD9cyTCuhvCKHnz2BweRXS4AjLnt9B
      8j1WZKcVSZYx+vowZ2SgtbZizshAkQWWjCRCwR4SH1iGHmhGPbAbk/E/BLt1zIsVbJYsZGsC
      JkcRlqSlmGKmgGQG2Qpcuh99Tfmd/G7fr0hzZtDn7eHBOY+MWzCiYRgROfFTCIEsy5MrH0Do
      YXZufQNNtpFVVI400kb7cIiq6nkkO0ddYWN1gw4PD5OYmPi2f+v4/VME+7op/so3CPhcdP7D
      V5EMgVDDCFnGHAjTmR9LSl+QlOoFhOvrkex27LNno/cPoCQlEn/fh3j+4O/xh7p5+IbHCLe3
      U/+TfyFmKASFudStLuX15g1gspEYysA7kER/VyzVSbA8RieprQHJ4cB540rss2chbBb6D7yC
      rWcfytBRZHs8lukfwn9oELXfQ7DuBLLVRuyaW3EsW0LLN79O7j88hiU7E9+213C/+hxyqgyK
      G/vSqUj2UXNGGAa+TjcE7MRUrsSeUYViy8JkSx1Xj8vZJ3JA99Hl7iI3Ie89i21dDteVG1RS
      LCxeecub/5CXzuVWjjmfJi0BDS0pGSQJuzMBzWYm/a576XntZURsDJbmXjIHdSTVwLdzJwAt
      t81i6b33gID+H/wQrbeXqsxKfr1nM3sb1qEZKn+d42VWYiWHvC1IXUGsnhx6hirRB0eYH2yl
      zHeIxE4VkZOJpbAYbWgYY2QIo3sf/iNPY+87hbl4Cf3uCkidhWzNp+PQS6iJsWTIGjb3IK51
      v8Pr3oajYpBAz+MEB0OIhCD2+wSKIxPFMWc0mMtRiGxOAdmBNduHbDZjTUhG1/UzCTGRqboW
      b08k3p548Qvfh0xKL9D5nhLSomr8P/s5bYqCOjyMyWzBWj2LOIsg9D+/R9d0DA22xBczbLKT
      qAbwth+i9/DTfGjG/WdbITdlGrNyF/JEza8RAIaJ3tZ+4o0l+IdtTNMauFU0kNlzEkeuHevi
      VI5mzCDzt+uRijJwzjTQG/8Df4udgX4rKZ/9FY7MQmLKjtLx+yc4qr7E0tkKDrkFz2IDqyQw
      yw6MgaOohTKmrA9jkeJQ9/4J+43/ghybcd4xcKSNb0ZclPMzKQXwTtp6XfzPXjeu5BuwH/Sy
      LEmw7KtfxxGXhGPRSjr3HUE9cJhnkys5bU+lODjIzrh8svrtuDee4of7XidbSqDg1G5eawjQ
      JPaiy3Y0dz66J5c0j5kK6rnB8JOku/FnDNAdbyJnWYiU6g8Qt287yQWtmIwmNL8F8+J78B1u
      RDh7Uft/jXs4iOwfImGRm/lx2SSTh3fdEYYbZMxSFvYZiwhs+wP7Z6gsXLQIpzMdkX4KvfMg
      ctmaqz281zWTXgADLj//9zdbCAbDLJtZxubaTpoNmTLDToEeQugelOJs/CfrOBCby3yphru6
      B2k0p/OLjPnM1VUWlaVQ07Cflw7XIyweDG8BkiuHsuAw8zynqQi5sdms1EwrY+1IIXZdMDPr
      GJk763E3fYspZj/MtKPFO8Eio41sRCqwEWsLMLStibDLAR4TfYvz2K7G84XFn4bBGuL++CyG
      zYOrcxPSrTdTPLSOEy072du2i5u6j5K6/DHeGY0jhIFW/xpq7QtIZgeWuZ+ElPMfTOd5fSOu
      vzyHHBdL0qOPYCsvj/j3MZnRDQNdGOiGQBcGhiEI6RpBVcWvqvjCYQJaGHcwREhT8arhySmA
      t7q5ugY8DLoDxKOyd/8pVMmKJivsPnyQpMzX6evsokMuwudMQghB/kAMijFIZ4wFWRboUg8/
      PViLLmQ0Xw7xXgcL/d1UuPeSLkZozDMwr1iJdGIvtpRGPpvUR5a7D0vIh5EUh71yLlr/QdSB
      PLSjASxSD0IKYbl5EZrYiX26jmXEg714GVnGMYYHp/OLZ7+BK9HK6k8sRulp5pAcpl86yVJn
      Ktk7n+Dj8TlIlffw68bNfDFnLjFvKSWodx1CO/0athu/jQi6CW3/D8y3PI70Dhtd7ekhePQo
      KV/+ElpfH4M/+y/Sv/+9c2He7wdGzzXQCes6IU0jpKmEdB1XwI8uBL5wGG84TEAN41XDhDSN
      oKai6QaqYSBLEiZZwqyYsJvM2EwmnFYrZkUh0eEg15I4OQXw1vLoFrOCSZFx6SYUswn9zK+k
      hnU0bhrhZ6blDEl2xJllw3PJ03klqQRvnBtTzBGOaTbEUAkFniCLPG2Ui17is/yYFoTR0wQl
      JgVDW4c9c4ilA37Cqo1d8en0pTxMcFcnD8UmIg9vwjy/DKVMR3sjDluOC03aB0KQmLcU8/TZ
      +Jp+glprZ3H3CAvt5fj7+ki5tQ05LwVX+ylaBuAFbxJ2KZ2vLXuUnIwS4nc+QY+nmyIlbzQQ
      zj+I4enGVLgMOT4X4kFOyMcYaEDOnfu2MVI7uzBnZ2OrKEeUlTLyp6fRBwYnnQCMM2cRG0Ig
      GL1Lh3UNfziMTw3jC6v41TD+cBi/GiaoabhDIcKaRkBTUfXR/QoAs6xgM5sxSRIxFisxFgtx
      VhuJdjs2s5lYixWb2YTTYkWWZEyyjCLLKJKE6T3cppNSAG/dCS7NdrJimonXjxroBphlgSxL
      +HsEa2PzGQrZMBs6mixjNqnoZhdeqws0KzFdJUz39THfc5BMm4fBPCtNuXEMGRnkNQ/T3m4n
      jT6myU0clxPZNrKKvHiDoxkGradcPOAZwbP+KLHTTIjuk0gJFiwZbsy5KxHWYYxQL5q3Dt1f
      j+HSEe1FpH/ra0gmEwO/+zpy9xLklUvZeexrZHinEpZLaQgc4vHnj/LpO2WG/UOkOZIIvvp1
      RGAYyZ6E1r4bkdeLkr8QEfZijLRhfks491nM6Wn4t+8g3NKK1t8PioKSGHlPzlkzI6RphHUd
      9cwdOqipeEMhwrqONxzCGw7jCQYIGwZBTSOoaaOF0XQdkyxjVhTsJjN2sxmb2YzTYsFhsZDq
      dOK0WLEqJuxmMzEWC1aTCYf5TXfqpHSDjieSJOEPqrywrY6WjkaCnlYcRjIrLEeoERUEcDAs
      JRKf5GO14yTZccP0qQb7ezLp96SS1pfOclcTZYFTNNiSabElctqWykZ/MbMbDnNL6DQZcT1k
      my3Y+62EB/N4uSSVBqOQhoEQvhGFGwfaKAt2Yy7zIplU5KYBkGV0PZVQfA9GsB/ZnIg17VZU
      10HQXCjx6UhnxetwY7h96LqKxythD6fx7UdXs2FfJ41bN7L5T3tZVJGC1l2HNFBPzEMvgGIh
      tO2HaI1vEHz1MTBZsMz/O3Akv2uMzDk5WIoK6f3Od0ePRvrUo5d8JvBZ9HOTVMUbDhNUVbzh
      EJ5QiKCmElDVM6bG6L/rwkA9Y6aaZQVFlokxW85NWLvZTKLdTpYzFqfNhtNixaIomGQZk6xg
      VhTMZ0RwtYPsJmU+wNDwCE+uP8qJxhaS7S4STX5S49xkxY6Q7nQTbwsgCRgI2ukLWtjcVkB/
      TzYlvmEWeVpJUf1okswLydNQTAEGlHicFj83OndTrTQgu+2EhhL5l9jbKDF1MD3UxWZ1BkHF
      xKMDu7GGQRGCUFk3cbl24lJWEtz9MianF29bJZgh7o4bUaa6Ud1HkS2pWLM+hfs3a7EWF2NK
      TcX96vM41qRjmbKAJ3eu5XT7TO5bkUDh9l/wYnAh8VlV3BH+C8dDFippxfnwiyCbCW3/EagB
      rCu/eWY0pHP7AO/cVRVCgGFgALoQaMJA1Y0zE1olqGnnJu3ZP4NnJrNfHZ3QYV1HNwwUedRk
      sCgKDosFh9mC02LFfsaksJnN2E1mHOcm+ehE51wv3+TspL4WNsKuugCEEAjdh1CHRuPQgz0M
      9hyht6+ZJHuIWM1Fiy+Vbn8cja40er2xuIM2XGEbHk0hOaSy0NNOSWCAVmsitTHpdFji8Stm
      EvDxXe9LxKX0oig64aF41KF49IANW1Y/26xF/NW4ASQwyRozpP20ZfewotlMdbuJ2MrTDCtT
      sHuKCfa2kFxxlK2lj7FsSjW+J39Dypf+HnPOaLlCTdMIta/Fu+mvEHRinRGLvXw1eqAV1V7O
      73cKjpzYwizdRVPaKr7+4SXEtW3n2M7fkpPsJE42kBzJ6H112G//D0TSFDRDJ6CqeILBUTPj
      jEfDGw7jO2NDu4KBt5kiQghMymiVCrvZjFUxEWOxYDOZsJstOM/coWOt1tG7NxBjs2FRTFiU
      0bvzeHEtCGDCTSDd33omq6h9tHhRqBsRHgDZimxOZkRL46UDCh2uWYx4bcw0NdAQysImhahV
      C4nTQggJMsMe/v/2ziw2jvu+45+5Z3f24B5cXhFJ67AkWzKtw5aPyHaNJqkR1G2StmmBBghS
      oEXaoi/pU5+M5qEoUPShDwWaog9tkhaIHRdpXd9X7VSSRcsiKfFa3hSP5S6X3HtndnZm+kCR
      lmxJFiWRouP9vBDYHf7+g//+vzO/3//4/X63MI3PtTkd7OKd8G7KoookuPSo4xxQZjmhDZNu
      akIqBBCmmvGctYEhAEpTieOTK3RwhgUtyP1t/bwY8oEg0JUVyfpdNEchVFqgnJEJ9rQhKDPE
      9+7nrCxy5J5urLHxDQF4tQXs4qvEv/P3iHKA0sw/YdsFlPbvInge3/maw+GuODPv/5RHjkWZ
      r64ysppjIvIgU/uexJ79gGrFwur6Y+xkimptFgQQEJBEEU1aCwDXXY2gphP1+znY3LIxqA1V
      QxIFREFEFLj8V0C8zkDZ6sxwnwe2+Q1gUR7+s7UjdL5dSL7OtWN0aguilgBEfvSLs5TefItT
      oU5cBFwkwKNZzOFYGocrixyoLJNRDM4Gv8S8GsYTBPxClePaKI9oQ+yT59CFGqet+/nH4m/z
      R4GXeTiVxsxEsTrq6HMKelsaQfAwM1GUYBkhVuCi3c1IxOHJpEBVC/L+47v5nezLRJwcguLH
      tI6Rf+b7nJ6bpedML/5vfRMnkVhzL0pT5LN9OE1PrU3PlRexagVsuY266+Lh4XqgyzJibgG1
      lMKKdLOrYw8R3bfhP+vyWlCoSTKaLOFTFETv2hsEb5df9dSIN8OWCcB1HRzXQ5bkjcQFtm0j
      CRaC5P9UBgDP81js6+evXzyPZXmsypczm3kCLXaRJ/NT6G6dC0Yro744ZVFFEDxapFW+4uul
      R5kg5wZ42zxKxdM5po7yVukhKrbBSaOfZ9VTLA/dh7jLQZwRQPTQOtJ4TTYVv0zZC5KvJCia
      UWzVYLSrlUwsRGuhjKg4OL4AtaqIoygIkogsK/gCAfTLfrFPllFKH+BXBHx6DCV3DnUojDdb
      ZDYeI3PiOF8/1EPcbyCYBZzZKTIvvIRSKOF/5BFC3/zGNasYwpp71RDAx+x8Abg1zp05Q75q
      s+eBh+lqXttheKMg2E6n+Zu/e545VyWtGBiOzV4zy8FqmoKk0RvYRVpdWzDyCyYPqBM8pZ+n
      VcnRV9/H/9UeYMZtR5AEdMnBkWUisolP9NjvW0T3W2TcDgRXoC5J2LKM49cRvCqKpCPbHlpz
      E8LyKHNqM0cFBSuzQJ/PYk/nI3RHoiyXyxxqbeNwSxvSJwZrvV4HO4258GPc2grWux6DdJM9
      eIAnUhlGsxkuHD/C946dQLFqLP3whxiPPYbS1UXhpZfwHTpE6LeevWbfNARwNTs+BvDMIkpi
      Dydb/SQXs7gxY6NARqlUwvO8jXTikiRRseq891Y/fVKEJq/KM4Ux2uQiWgr4FwAAC4NJREFU
      A6FO3mg/TE1T0WSHbq/Co5Uz9MhjeIaPgaajvKYfIE8QQYAveSC6Lm3VCoa6hOEVMeoldNdE
      qvtoHRlDq9n4TBOhtYZekAmFx3Fyu/H9+jdR9h+iPvdj/ll+GrfDY0JYIKH2IDlFvtz+caG6
      YqGA53lXiXmtEISOkvhTREHAmvtbhp/s5nhnF8rufez60Y84bZqkVlfxpVLUc3mELz+Oo6qI
      Dz1E9fQZnCdOXmXTdV0cx9nY+75+pmK972RZ3ijMAXyqX9exbRtBEK5aX1kvWuJ53sYgXW9P
      kqSN3EzXs7letulaNtcHp+M4mKZ5R21+3Ndr112ZQ8q27Wva/ORvdaXNrQmCJQnbMrFtGVGS
      N55erucxXshRrq2t/GVWqiwtVBi8MEckn+b33AxeTCd59F6Sug/Hhbhr0eXM8mjhlwRKKwy5
      nfyb+yxzlXbsgoBjezh2FbcOmmfzbf/bPKX1MxfcxVT4EPcmWuiv+Uj52ulJSBxYXqXy2uvU
      JQGxYKIKAsGvHEB/8jHc3AyrokDZXeJcqosm35dZKF6ipz2KYXx8rHP9pXnlE0jTtI1BKggC
      ZnsbHat5lksF9herFKNRZEkiGgqiSxJpVUFeWEBua8Oankbq7CQcDl9lc72dK6dBr3xhC4KA
      53lXCeDK7250v+ufXfkGuNb/34rN9c9rtdpVA+9O2ARQVRXp8hrCbdvcmhjAZXq4n5msSc/R
      4zT51zqhZtf4148+4sJYmuyiiW+5yG5rkQcSNrtPHKGuNPPT98eYtyRCQoEeOckT+lpS2NPO
      fkraPQyk28iiEHQsHi9O01kr4EgijiQTao8xvVemqkrkw7t56t7DPPylThaLa0/s9lAYx7Ko
      vvwyhVdeRVAUQl//Kqo+gJu/BLKG9uif01vJ8nz/LyjXLE50HuIPjv7hZ1aA/2SBjHomw/JP
      /53FxQVyisLoycd4+thD3BtfS1de+fAcuR//BLdaRd2zh9j3/wTpOkVBGi7Q1ez8GOA6WLUa
      P/iHV3HTixx0x4nt8tj/a1/j4L2P4tMMsCuUxk5TGvwv5MwAgX0nUQ99CzvUTQ0JVRFxalDz
      RGQcfO7l6omCgCcIiJpGlbWicrIg4lOUT3VSrVZDkWXcchkEAdEwwHOgVgZZQ5D1tWqMdoW6
      YxPUgojiZw+8a1WI8Wwb17QwZQlJkdHlq+Mft1zGs21Ew7hh2daGAK5mx8cA18XzuCf/MqGD
      AfY+/lUeveckmqzj5S9Ru/gz6qOvIHoeof2/ie+Zv9o4LCIBG9nuNbhRjombOdAniOLVGdUE
      Ga4oCSoIAoZ6+5mHBUVBUpTr3q9o3H4bDW6PbRWAIAo8/N1vc2zXCXyyirPQhznwM5y5XqT2
      I2hP/CVSyyFKlot4B4vkNWhwPbZXAAg83ryf+sWfUxl8ERwb5f5voJ38wUbhNgC7tLKdt9Xg
      C8w2u0AOlRe+hxjdjfbYXyB1HEPQPx343e0dgg2+OGyvAAQR/7f+BSHYinCDwPJOV4pv0OB6
      bPNIExDDHdvbZIMGN2B7YwBBuKlUeY7jbElKPdi6dH3rK91b4b6tz1RfeVT0TrFV/bGVtl3X
      3Vg1vl22VQA369oYhnFTB2dula2wvb5ae6fKO22H7fVV5K10Obeir+v1+sZK8O2y/UWZGjTY
      QWzrSvDNcuX+ls+L7WvtOdnptrfyntft7/T+2JECaNBgu5Cee+655+72TazjeQ6TQ31MLpVo
      ScQQb1PgnucyMzrAheQlmltamBu7wNhcjtZEhMnB80ylyyTi0eseGfwsKrlFRmfzRAMi53rP
      YkkBAlKNc7291NUITQHt1u7brTM68CEzy1Wam3T6es9Sxk9YdfiotxdTDhIJ3nhz3rVwHZvR
      Cx8xsZAj0Rxh/OJ5LmVNErEgI+fPslhwaI6FN/1ktatFRgbHCbUmcMsrfPDBOaRAFNnO0fvh
      edRwM0J1md5zA/gjrfi1m9zT5HnkMvNMpwrEIwHmJ4fpH5kkHEuQnRlmaCpNcyLGwvgFhmZW
      aG+Nb/q33FExQHU1TUWN0+avsJA1b9+g5xCId3Kky0dyapGiF6C7qUZyZIKyr5VmzSSTq96i
      cZeJsSSrxTKpiTHa7ztGZn6KuekJug8fJzOT5FbLOKzOjuLG9vHggW6WJ5M0HzjCysI0izMT
      tB88xsqlCW5lDsQsZbHkGN1Bk+TYLE6og4hUYGZkGLd5P4q1QtHcvGWrZqPjYgLJ0QkeOH6E
      helJxidmOXzsCLPjI0xNLtJz9AGmxpObsOziiD4cqwBeHbWpnQf3dpBanGQ+r7IvLjG1OM9y
      SWd/2GRiefMzTjtKAHbdpSkYIBCNUC/f6sC8AkFG8crMFP10xRWCwRCBeIxKpkwkGiAYCGPb
      1i2ZzkyP4G/bi4KD6ShEQj4CioLtKhiGTkhTqd3iba+WTTLjA7xzqpeVikgs7Ceoqlh1iWBI
      p+kWbSuaQTU7zdBcEU0RiYQCBMJhSstVYokATX4Dy928AALhKH5tbSbJU3UMnx9d9XAVnYDP
      j6I4oBoYPj+qvIkntCARi8eQBAFEBb9gMr1ick8igK8pTrQpQKlawm/EiLTGqOY3P2Z2lAD8
      fp352UkmkpcwYre/Gc5zqvQNjOPXBDxkluanSA5Okbi3hbnkBOOX5vH7b77U6JXUXFiaTjI5
      Po2iuwxeHGbFcgj4YGxohIzlfryDdZO0xuMY8RbCukTQELg4MMRy1SZkiCQvDpOqOmzeAQKr
      mkfU4ySaVGzHY3pynKnpRVr3JZjoH2Yqs0JA3vz25XJ+mflUioX5FLpXY3B4iHJdw8BkcHiI
      mhdEdQoMDQ9jC5twC12HpYVLpFIpMstpPrwwRkCTqHgGpYUR+kfmSEQS5DJJ+vumibdt/rfc
      YUGwR2Elg4lOczR0jcq+m7Tm2ixcWqAORBJtCGaesqPQEg9TvBPteA7lqo1fl0mnUvgjCQKq
      QCq1RCjeiqHd6vy6x0p6kbocIN5ksLy0iB5uJqhJpJdS+CMtBH2bn1/3PJfVzBKmp9KaiFLI
      prElP/FIgFwmhauGiIaNTfdHpZAls1pCUnRaExGWUhmiiRZUoU5qKUustQ3ZtVhKr9Lc1oYq
      3WQLnkM6tUi15mAEw9jVIrW6SzjWguqWyZsCLc0RKvksRVuiNd606fhlhwmgQYPtZUe5QA0a
      bDcNATT4QtMQQIMvNA0B/KrgeZfz/NzEpZfzATVoCODu4Tmc/+Xr/Pw/XyVb/XhWf2lykLFU
      4dOXew6ZTPa65orpSd54/zxnz5yhWknz/pmL17yu/3wvM6Mf8uYHSRoSaAjgrlGe6+P8sp9n
      v/40BmXefe1V+pJzFDJzpPJVxgfO8N7ZC1hWgdGLg4xMzjA2NoWZT/HG62+SylUYPn+akdll
      wGOo7yP23Hc/U2NJTr37v0Q6OsjOJXnt9fdIpy/x2iuvMLVUYHZmAqP9Pqy5C5S25hjA54qG
      AO4S5dwykdYOFFXFq+aZS6X4j+dfAMBdGeW9cZtAfoRTQ4O89D9naW8LMzkxzX8//xMmJkd5
      6e03mTo/gogLHixnHJrjOpWVGc6OZmkLS7z8zlkeeriH6mqapaVZXnjx1bXGBQVdNSlWGgpo
      COAuEd97hNzFd3n77V+SHO2jrLYQDa6twgpaEC83y/hiiZBfo3PPfkKXF75i0Wbadx/kxH37
      EcMab546B4BheFQqLv5oN7//G4d55Z1z+MUaH/VdZHToAkbbbgx5/USZi2NLqOrWVJ7/PNFY
      CLuLWJUihYpNU9ggny8hqyoBTcERFerVAqYr0RTyYZkuPp9CpWKiqyIrqwV8gSB1s4LiC2L4
      FOaHzzJhNXN8Xws+v06pZKLJHrmSRSjoo1S20HQNWQTPWuX1UxM8+8wTt73j9vNOQwC/Kng2
      8wtZ2tpbP3NQFzOXsI12ov7GG6AhgAZfaP4fmtJQuZ/T8d4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Nutrients Consumed' width='192'>
      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
      FA7h8LXS0xbYWl7t9yBL7F4OXSuHaJZM9ugO9ftBjCxz/b2PiKey2Fy+3W2WxebaAgvrGfqG
      L9DXHqh4eVHVMFfmMH3tDHpTbKTLdPp23o4kKwRbX1aJs1d/o0d2uFjVoaRpJLYdhrwp1jNl
      Ov2n61DUVIzXHNbewkHxhfnh9z+gUNbxOHZfpbUMlamJZ+iKlyujo7jte759DZ1iucTU82mG
      r3/E1KOvK7Zvd3kJu7b+0L1+f7W9sMvBfaDDVdx7r8ccw6F+J8GmzuOvPuXuxByPn4zvbrN0
      JubWuHn7JvOT1deHXL5+DY+3heuXhnCHhjjXUXnWf7iDcYCDcajDpWs7Dq5jO8we2+Ft94Oa
      WuIvfvU5008fsrBnDl5LLLApd3C1zeLxYpVlyA4/Ny71033hJu0+mdHR0TfuH0Dbdph6+pAX
      VRxicgdX2+HxYnofh4G3cqhjBVUJV1MrQU0Ga28OJVx2mJ2eQdPKTM4tMjLYt2t6T3F46ene
      /rCb3/5mDi8drAoHKh0G+rAp9Xbo3bUqthYOkmKjPdyGWylh7jkBlRQnajbKC71ALr/AarNE
      d/j1I9HWFOXLgVtLsPIodSS2HTxKCXPPZICkONGyUV7oxQMcwm/nYJ0im5ublq7rlmUUraXl
      qGVZlmUYqvVicaUODqUz4hCpq0M6tmGl8mXLskwrE1myYjn91Bwika33vssheroO9RkCFZPM
      rsaxrK2y6gsv5urgkDgjDom6Oqwtv9hePyRhK28yu1H9V2knyfrK4o5DaZPZjeq/HDsJ6jME
      8rbT51vnwePHoJUYOF85bXVqDo8eg35WHK6dusLw+XM8Hn9KzOWmWISbdypnoU6aoXMjux3e
      PVrp9VpQ1+rQlmnCW/4AWjjUzsGytlZgSrJ8qjcyeb06dL0c/j84Eslc9ZlYzwAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sugar v/s Carbohydrates' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
